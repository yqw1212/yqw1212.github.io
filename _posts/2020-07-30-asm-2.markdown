---
layout: post
title:  汇编语言学习(二)
date:   2020-07-30 00:00:01 +0300
image:  2020-07-30-deer.jpg
tags:   [asm]
---

### 一个源程序从写出到执行的过程

* 编写

* 编译、连接

  使用汇编语言编译程序（MASM.exe）对源程序文件中的源程序进行编译，产生目标文件

  再用链接程序（link.exe）对目标文件进行链接，生成可在操作系统中的直接运行的可执行文件。

  可执行文件包含两部分内容

  * 程序（从原程序中的汇编指令翻译过来的机器码）和数据（源程序中定义的数据）
  * 相关的描述信息（比如：程序有多大、要占多少内存空间等）

* 执行

  操作系统依照可执行文件中的描述信息，将可执行文件中的机器码和数据加载入内存，并进行相关的初始化（比如：设置CS：IP指向第一条要执行的指令），然后由CPU执行程序。

### 源程序

#### 汇编指令

有对应的机器码的指令，可以被编译为机器指令，最终为CPU所执行。

#### 伪指令

没有对应的机器码的指令，最终不能被CPU所执行。伪指令是由编译器来执行的指令，编译器根据伪指令来进行相关的编译工作。

segment和ends是一对成对使用的伪指令，这是在写可被编译器编译的汇编程序时，必须要用到的一对伪指令。

segment和ends的功能是定义一个段，segment说明一个段的开始，ends说明一个段的结束。

一个段必须有一个名称来标识，使用格式为：

```assembly
段名 segment
段名 ends
```

一个汇编程序是由多个段组成的这些段被用来存放代码、数据或当作栈空间来使用。一个有意义的汇编程序中至少要有一个段，这个段用来存放代码。

End是一个汇编程序的结束标记，编译器在编译汇编程序的过程中，如果碰到了伪指令end，就结束对源程序的编译。

### 寄存器与段的关联假设

assume：含义为“假设”

它假设某一段寄存器和程序中的某一个用segment……ends定义的段相关联。

通过assume说明这种关联，在需要的情况下，编译程序可以将段寄存器和某一个具体的段相联系。

### 源程序中的“程序”

我们可以将源程序文件中的所有内容称为源程序，将源程序中最终由计算机执行处理的指令或数据称为程序。程序最先以汇编指令的形式存在源程序中，经编译、链接后转变为机器码，存储在可执行文件中。

