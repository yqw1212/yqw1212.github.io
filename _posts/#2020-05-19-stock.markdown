# 上证指数涨跌预测

## 数据介绍

网易财经上获得的上证指数的历史数据，爬取了10年的上证指数数据

## 实验目的

根据给出当前时间前150天的历史数据，预测当天上证指数的涨跌

## 技术路线

sklearn.svm.SVC

## 实验过程

```python
import pandas as pd # 用来加载CSV数据的工具包
import numpy as np
from sklearn import svm
from sklearn.model_selection import train_test_split

data = pd.read_csv("000777.csv", encoding="gbk", parse_dates=[0], index_col=0)
# parse_dates=第0列解析为日期,index_col=用作行索引的列编号
data.sort_index(0, ascending=True, inplace=True)

dayfeature = 150
featurenum = 5*dayfeature
x = np.zeros((data.shape[0]-dayfeature, featurenum+1))
# 对于每一条数据,他的特征是前150天的所有特征数据
# 即 150*5 +1是将当天的开盘价引入作为一条特征数据
y = np.zeros((data.shape[0]-dayfeature))

for i in range(0, data.shape[0]-dayfeature):
    x[i, 0:featurenum] = np.array(data[i:i+dayfeature]\
        [[u"收盘价", u"最高价", u"最低价", u"开盘价", u"成交量"]]).reshape((1, featurenum))
    # 将数据中的 收盘价 最高价 开盘价 成交量 存入 x 数组中
    x[i, featurenum] = data.iloc[i+dayfeature][u"开盘价"]

for i in range(0, data.shape[0]-dayfeature):
    if data.iloc[i+dayfeature][u"收盘价"] >= data.iloc[i+dayfeature][u"开盘价"]:
        y[i] = 1
    else:
        y[i] = 0

clf = svm.SVC(kernel="rbf")
# 调用svm函数 并设置kernel参数 默认是"rbf" 其它："linear" "poly" "sigmoid"
result = []
for i in range(5):
    x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2)
    # x和y 的验证集和测试集 切分 80-20% 的测试集
    clf.fit(x_train, y_train)
    result.append(np.mean(y_test == clf.predict(x_test)))
    # 将预测数据和测试集的验证数据比对
print("svm classifier accuacy")
print(result)
```

## 实验结果

| 核函数  | 1      | 2      | 3      | 4      | 5      |
| ------- | ------ | ------ | ------ | ------ | ------ |
| rbf     | 0.5320 | 0.5287 | 0.5504 | 0.5374 | 0.5352 |
| sigmoid | 0.5418 | 0.5472 | 0.5363 | 0.5418 | 0.5537 |

本次实验运用了两个核函数做实验，准确率由表中数据所示。5次交叉验证的准确率相近，均为53左右。

## 交叉验证

### 基本思想

交叉验证法先将数据集D划分为k个大小相似的互斥子集，每个自己都尽可能保持数据分布的一致性，即从D中通过分层采样得到。然后，每次用k-1个子集的并集作为训练集，余下的那个子集作为测试集；这样就可获得k组训练测试集从而可进行k次训练和测试，最终返回的是这个k个测试结果的均值。通常把交叉验证法称为“k者交叉验证”，k最常用的取值是10，此时称为10折交叉验证 。