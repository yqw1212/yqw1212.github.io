from z3 import *


# input
# check

v42 = [0, 0, 0, 0]

v3 = [BitVec("v{}".format(i), 8) for i in range(16)]

s=Solver()

v29 = v3[0]
v42[0] = v29
v29 = v3[1]
v42[1] = v29
v29 = v3[2]
v42[2] = v29
v29 = v3[3]
v42[3] = v29
v0 = v42[2] +v42[1]
v42[1] = v0
v42[2] = 27
v26 = v42[1]
v0 = v42[2]

s.add(v26 == v0)

v29 = v3[1]
v42[1] = v29
v29 = v3[2]
v42[2] = v29
v0 = v42[1] +v42[0]
v42[0] = v0
v0 = v42[2] * v42[0]
v42[0] = v0
v0 = v42[0] - v42[3]
v42[0] = v0
v42[2] = 1
v26 = v42[0]
v0 = v42[2]

s.add(v26 == v0)

v29 = v3[2]
v42[2] = v29
v42[0] = 99
v0 = v42[0] ^ v42[2]
v42[2] = v0
v29 = v3[0]
v42[0] = v29
v0 = v42[2] * v42[0]
v42[0] = v0
v0 = v42[0] - v42[1]
v42[0] = v0
v0 = v42[3] +v42[0]
v42[0] = v0
v42[1] = 246
v26 = v42[0]
v0 = v42[1]

s.add(v26 == v0)

v29 = v3[1]
v42[1] = v29
v29 = v3[0]
v42[0] = v29
v29 = v3[2]
v42[2] = v29
v0 = v42[0] +v42[1]
v42[1] = v0
v0 = v42[2] +v42[1]
v42[1] = v0
v0 = v42[3] +v42[1]
v42[1] = v0
v42[0] = 30
v26 = v42[1]
v0 = v42[0]

s.add(v26 == v0)

v29 = v3[1]
v42[1] = v29
v29 = v3[0]
v42[0] = v29
v0 = v42[3] * v42[0]
v42[0] = v0
v0 = v42[0] - v42[1]
v42[0] = v0
v0 = v42[2] +v42[0]
v42[0] = v0
v42[3] = 49
v26 = v42[0]
v0 = v42[3]

s.add(v26 == v0)

v29 = v3[4]
v42[0] = v29
v29 = v3[5]
v42[1] = v29
v29 = v3[6]
v42[2] = v29
v42[3] = 99
v0 = v42[3] +v42[0]
v42[0] = v0
v42[3] = 104
v0 = v42[3] ^ v42[0]
v42[0] = v0
v42[3] = 82
v26 = v42[0]
v0 = v42[3]

s.add(v26 == v0)

v42[3] = 51
v0 = v42[1] - v42[3]
v42[1] = v0
v42[3] = 99
v0 = v42[3] * v42[1]
v42[1] = v0
v42[0] = 65
v26 = v42[0]
v0 = v42[1]

s.add(v26 == v0)

v42[3] = 99
v0 = v42[3] ^ v42[2]
v42[2] = v0
v42[3] = 107
v0 = v42[3] +v42[2]
v42[2] = v0
v42[1] = 14
v26 = v42[2]
v0 = v42[1]

s.add(v26 == v0)

v42[1] = 158
v29 = v3[7]
v42[0] = v29
v26 = v42[0]
v0 = v42[1]
# v3[7]=158
s.add(v26 == v0)

v29 = v3[8]
v42[0] = v29
v29 = v3[9]
v42[1] = v29
v29 = v3[10]
v42[2] = v29
v29 = v3[11]
v42[3] = v29
v0 = v42[3] * v42[0]
v42[0] = v0
v42[3] = 206
v26 = v42[0]
v0 = v42[3]

s.add(v26 == v0)

v29 = v3[8]
v42[0] = v29
v29 = v3[11]
v42[3] = v29
v0 = v42[1] +v42[0]
v42[0] = v0
v0 = v42[2] * v42[0]
v42[0] = v0
v0 = v42[0] - v42[3]
v42[0] = v0
v42[2] = 45
v26 = v42[0]
v0 = v42[2]

s.add(v26 == v0)

v29 = v3[10]
v42[2] = v29
v42[0] = 99
v0 = v42[0] ^ v42[2]
v42[2] = v0
v29 = v3[8]
v42[0] = v29
v0 = v42[2] * v42[0]
v42[0] = v0
v0 = v42[0] - v42[1]
v42[0] = v0
v0 = v42[3] +v42[0]
v42[0] = v0
v42[1] = 21
v26 = v42[0]
v0 = v42[1]

s.add(v26 == v0)

v29 = v3[9]
v42[1] = v29
v29 = v3[8]
v42[0] = v29
v29 = v3[10]
v42[2] = v29
v0 = v42[0] +v42[1]
v42[1] = v0
v0 = v42[2] +v42[1]
v42[1] = v0
v0 = v42[3] +v42[1]
v42[1] = v0
v42[0] = 174
v26 = v42[1]
v0 = v42[0]

s.add(v26 == v0)

v29 = v3[9]
v42[1] = v29
v29 = v3[8]
v42[0] = v29
v0 = v42[3] * v42[0]
v42[0] = v0
v0 = v42[0] - v42[1]
v42[0] = v0
v0 = v42[2] +v42[0]
v42[0] = v0
v42[3] = 9
v26 = v42[0]
v0 = v42[3]

s.add(v26 == v0)

v29 = v3[12]
v42[0] = v29
v29 = v3[13]
v42[1] = v29
v29 = v3[14]
v42[2] = v29
v42[3] = 99
v0 = v42[3] +v42[0]
v42[0] = v0
v42[3] = 104
v0 = v42[3] ^ v42[0]
v42[0] = v0
v42[3] = 250
v26 = v42[0]
v0 = v42[3]

s.add(v26 == v0)

v42[3] = 30
v0 = v42[1] - v42[3]
v42[1] = v0
v42[3] = 99
v0 = v42[3] * v42[1]
v42[1] = v0
v42[0] = 140
v26 = v42[0]
v0 = v42[1]

s.add(v26 == v0)

v42[3] = 99
v0 = v42[3] ^ v42[2]
v42[2] = v0
v42[3] = 107
v0 = v42[3] +v42[2]
v42[2] = v0
v42[1] = 131
v26 = v42[2]
v0 = v42[1]

s.add(v26 == v0)

s.add(v3[15] == 71)

# v42[1] = 71
# v29 = v3[15]
# v42[0] = v29
# v26 = v42[0]
# v0 = v42[1]

# v26 == v0

flag = ""
if s.check() == sat:
    print(s.model())
    for i in v3:
        flag += str(hex(int(str(s.model().eval(i)))))[2:]
        print(hex(int(str(s.model().eval(i)))))
print(flag)
